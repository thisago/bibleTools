/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI922746960 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI922746966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI754975123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1140850705 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1140850703 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI754976051 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217741.base = NTI33555176;
NTI134217743.base = NTI134217741;
var NNI33555824 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555824.node = NNI33555824;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
NTI754976051.base = NTI33554448;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555176;
var NNI1140850703 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1140850705, name: "Field1", sons: null}]};
NTI1140850703.node = NNI1140850703;
NTI754975123.base = NTI33554449;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI922746966 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI922746960, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI922746966.node = NNI922746966;

function toJSStr(s_33556854) {
  var result_33556855 = null;

    var res_33556893 = newSeq_33556872((s_33556854).length);
    var i_33556894 = 0;
    var j_33556895 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556894 < (s_33556854).length)) break Label2;
          var c_33556896 = s_33556854[i_33556894];
          if ((c_33556896 < 128)) {
          res_33556893[j_33556895] = String.fromCharCode(c_33556896);
          i_33556894 += 1;
          }
          else {
            var helper_33556909 = newSeq_33556872(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556910 = c_33556896.toString(16);
                  if ((((code_33556910) == null ? 0 : (code_33556910).length) == 1)) {
                  helper_33556909.push("%0");;
                  }
                  else {
                  helper_33556909.push("%");;
                  }
                  
                  helper_33556909.push(code_33556910);;
                  i_33556894 += 1;
                  if ((((s_33556854).length <= i_33556894) || (s_33556854[i_33556894] < 128))) {
                  break Label3;
                  }
                  
                  c_33556896 = s_33556854[i_33556894];
                }
            };
++excHandler;
            try {
            res_33556893[j_33556895] = decodeURIComponent(helper_33556909.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556893[j_33556895] = helper_33556909.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556895 += 1;
        }
    };
    if (res_33556893.length < j_33556895) { for (var i = res_33556893.length ; i < j_33556895 ; ++i) res_33556893.push(null); }
               else { res_33556893.length = j_33556895; };
    result_33556855 = res_33556893.join("");

  return result_33556855;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function eqStrings(a_33556988, b_33556989) {
        if (a_33556988 == b_33556989) return true;
    if (a_33556988 === null && b_33556989.length == 0) return true;
    if (b_33556989 === null && a_33556988.length == 0) return true;
    if ((!a_33556988) || (!b_33556989)) return false;
    var alen = a_33556988.length;
    if (alen != b_33556989.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556988[i] != b_33556989[i]) return false;
    return true;
  

  
}

function arrayConstr(len_33557252, value_33557253, typ_33557254) {
        var result = new Array(len_33557252);
    for (var i = 0; i < len_33557252; ++i) result[i] = nimCopy(null, value_33557253, typ_33557254);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557209, src_33557210, ti_33557211) {
  var result_33557220 = null;

    switch (ti_33557211.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557200(ti_33557211))) {
      result_33557220 = src_33557210;
      }
      else {
        result_33557220 = [src_33557210[0], src_33557210[1]];
      }
      
      break;
    case 19:
            if (dest_33557209 === null || dest_33557209 === undefined) {
        dest_33557209 = {};
      }
      else {
        for (var key in dest_33557209) { delete dest_33557209[key]; }
      }
      for (var key in src_33557210) { dest_33557209[key] = src_33557210[key]; }
      result_33557220 = dest_33557209;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557211.base == null))) {
      result_33557220 = nimCopy(dest_33557209, src_33557210, ti_33557211.base);
      }
      else {
      if ((ti_33557211.kind == 17)) {
      result_33557220 = (dest_33557209 === null || dest_33557209 === undefined) ? {m_type: ti_33557211} : dest_33557209;
      }
      else {
        result_33557220 = (dest_33557209 === null || dest_33557209 === undefined) ? {} : dest_33557209;
      }
      }
      nimCopyAux(result_33557220, src_33557210, ti_33557211.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557210)) { 
        if(dest_33557209 === null || dest_33557209 === undefined || dest_33557209.length != src_33557210.length) {
          dest_33557209 = new src_33557210.constructor(src_33557210);
        } else {
          dest_33557209.set(src_33557210, 0);
        }
        result_33557220 = dest_33557209;
      } else {
        if (src_33557210 === null) {
          result_33557220 = null;
        }
        else {
          if (dest_33557209 === null || dest_33557209 === undefined || dest_33557209.length != src_33557210.length) {
            dest_33557209 = new Array(src_33557210.length);
          }
          result_33557220 = dest_33557209;
          for (var i = 0; i < src_33557210.length; ++i) {
            result_33557220[i] = nimCopy(result_33557220[i], src_33557210[i], ti_33557211.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557210 === null) {
        result_33557220 = null;
      }
      else {
        if (dest_33557209 === null || dest_33557209 === undefined || dest_33557209.length != src_33557210.length) {
          dest_33557209 = new Array(src_33557210.length);
        }
        result_33557220 = dest_33557209;
        for (var i = 0; i < src_33557210.length; ++i) {
          result_33557220[i] = nimCopy(result_33557220[i], src_33557210[i], ti_33557211.base);
        }
      }
    
      break;
    case 28:
            if (src_33557210 !== null) {
        result_33557220 = src_33557210.slice(0);
      }
    
      break;
    default: 
      result_33557220 = src_33557210;
      break;
    }

  return result_33557220;

}

function mnewString(len_33556950) {
        return new Array(len_33556950);
  

  
}

function addInt(a_33556997, b_33556998) {
        var result = a_33556997 + b_33556998;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557262, a_33557263, b_33557264) {
  var result_33557265 = 0;

  BeforeRet: {
    if (((a_33557263 <= i_33557262) && (i_33557262 <= b_33557264))) {
    result_33557265 = i_33557262;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557265;

}

function chckIndx(i_33557257, a_33557258, b_33557259) {
  var result_33557260 = 0;

  BeforeRet: {
    if (((a_33557258 <= i_33557257) && (i_33557257 <= b_33557259))) {
    result_33557260 = i_33557257;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557257, a_33557258, b_33557259);
    }
    
  };

  return result_33557260;

}

function cstrToNimstr(c_33556851) {
      var ln = c_33556851.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556851.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556851.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function raiseException(e_33556642, ename_33556643) {
    e_33556642.name = ename_33556643;
    if ((excHandler == 0)) {
    unhandledException(e_33556642);
    }
    
    e_33556642.trace = nimCopy(null, rawWriteStackTrace_33556599(), NTI33554449);
    throw e_33556642;

  
}

function subInt(a_33557001, b_33557002) {
        var result = a_33557001 - b_33557002;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);
var ConstSet3 = setConstr();

function addChar(x_33557344, c_33557345) {
    x_33557344.push(c_33557345);

  
}
var ConstSet4 = setConstr([65, 90], [97, 122]);
var ConstSet5 = setConstr([48, 57]);

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}

function makeNimstrLit(c_33556848) {
      var result = [];
  for (var i = 0; i < c_33556848.length; ++i) {
    result[i] = c_33556848.charCodeAt(i);
  }
  return result;
  

  
}

function nimMax(a_33557055, b_33557056) {
    var Temporary1;

  var result_33557057 = 0;

  BeforeRet: {
    if ((b_33557056 <= a_33557055)) {
    Temporary1 = a_33557055;
    }
    else {
    Temporary1 = b_33557056;
    }
    
    result_33557057 = Temporary1;
    break BeforeRet;
  };

  return result_33557057;

}

function nimMin(a_33557051, b_33557052) {
    var Temporary1;

  var result_33557053 = 0;

  BeforeRet: {
    if ((a_33557051 <= b_33557052)) {
    Temporary1 = a_33557051;
    }
    else {
    Temporary1 = b_33557052;
    }
    
    result_33557053 = Temporary1;
    break BeforeRet;
  };

  return result_33557053;

}
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function isObj(obj_33557327, subclass_33557328) {
  var result_33557329 = false;

  BeforeRet: {
    var x_33557330 = obj_33557327;
    if ((x_33557330 == subclass_33557328)) {
    result_33557329 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557330 == subclass_33557328))) break Label2;
          if ((x_33557330 == null)) {
          result_33557329 = false;
          break BeforeRet;
          }
          
          x_33557330 = x_33557330.base;
        }
    };
    result_33557329 = true;
    break BeforeRet;
  };

  return result_33557329;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet8 = setConstr(60, 62, 94);
var ConstSet9 = setConstr(60, 62, 94);
var ConstSet10 = setConstr(45, 43, 32);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr([48, 57]);

function divInt(a_33557009, b_33557010) {
        if (b_33557010 == 0) raiseDivByZero();
    if (b_33557010 == -1 && a_33557009 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557009 / b_33557010);
  

  
}

function mulInt(a_33557005, b_33557006) {
        var result = a_33557005 * b_33557006;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet14 = setConstr([65, 90], [97, 122]);
var ConstSet15 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet16 = setConstr([65, 90], [97, 122]);
var ConstSet17 = setConstr([97, 122]);
var ConstSet18 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet19 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet20 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet21 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet22 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet23 = setConstr(32, 9, 11, 13, 10, 12);
var F = {procname: "module jsre", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module forStr", prev: framePtr, filename: "/data/os/config/.nimble/pkgs/util-1.14.1/util/forStr.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module forStr", prev: framePtr, filename: "/data/os/config/.nimble/pkgs/util-1.14.1/util/forStr.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module base", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/base.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module base", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/base.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hebrew", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/hebrew.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hebrew", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/hebrew.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module english", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/english.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module english", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/english.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module portuguese", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/portuguese.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module portuguese", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/portuguese.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module books", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module books", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/types.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newSeq_33556872(len_33556874) {
  var result_33556875 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 597;
    result_33556875 = new Array(len_33556874); for (var i = 0 ; i < len_33556874 ; ++i) { result_33556875[i] = null; }  framePtr = F.prev;

  return result_33556875;

}

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557200(ti_33557201) {
  var result_33557202 = false;

  BeforeRet: {
    result_33557202 = !((ConstSet1[ti_33557201.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557202;

}

function nimCopyAux(dest_33557213, src_33557214, n_33557215) {
    switch (n_33557215.kind) {
    case 0:
      break;
    case 1:
            dest_33557213[n_33557215.offset] = nimCopy(dest_33557213[n_33557215.offset], src_33557214[n_33557215.offset], n_33557215.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557215.sons.length; i++) {
      nimCopyAux(dest_33557213, src_33557214, n_33557215.sons[i]);
    }
    
      break;
    case 3:
            dest_33557213[n_33557215.offset] = nimCopy(dest_33557213[n_33557215.offset], src_33557214[n_33557215.offset], n_33557215.typ);
      for (var i = 0; i < n_33557215.sons.length; ++i) {
        nimCopyAux(dest_33557213, src_33557214, n_33557215.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556777, a_33556778, b_33556779) {
    var Temporary1;

    if ((b_33556779 < a_33556778)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556777) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556778) || [],[32,46,46,32] || [],HEX24_369098760(b_33556779) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990072(result_301990074, result_301990074_Idx, x_301990075, start_301990076, n_301990077) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    var old_301990078 = (result_301990074[result_301990074_Idx]).length;
    F.line = 44;
    if (result_301990074[result_301990074_Idx].length < (Temporary1 = chckRange(addInt(old_301990078, n_301990077), 0, 2147483647), Temporary1)) { for (var i = result_301990074[result_301990074_Idx].length; i < Temporary1; ++i) result_301990074[result_301990074_Idx].push(0); }
         else {result_301990074[result_301990074_Idx].length = Temporary1; };
    Label2: {
      F.line = 46;
      var iHEX60gensym4_301990092 = 0;
      F.line = 119;
      var i_553648424 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_553648424 < n_301990077)) break Label4;
            F.line = 49;
            iHEX60gensym4_301990092 = i_553648424;
            F.line = 49;
            result_301990074[result_301990074_Idx][chckIndx(addInt(old_301990078, iHEX60gensym4_301990092), 0, (result_301990074[result_301990074_Idx]).length - 1)] = x_301990075.charCodeAt(chckIndx(addInt(start_301990076, iHEX60gensym4_301990092), 0, (x_301990075).length - 1));
            F.line = 122;
            i_553648424 = addInt(i_553648424, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990068(result_301990070, result_301990070_Idx, x_301990071) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    addChars_301990072(result_301990070, result_301990070_Idx, x_301990071, 0, ((x_301990071) == null ? 0 : (x_301990071).length));
  framePtr = F.prev;

  
}

function addInt_301990093(result_301990094, result_301990094_Idx, x_301990095) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 111;
    addChars_301990068(result_301990094, result_301990094_Idx, ((x_301990095) + ""));
  framePtr = F.prev;

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 115;
    addInt_301990093(result_301990112, result_301990112_Idx, x_301990113);
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    addInt_301990111(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556512(f_33556513) {
  var result_33556514 = [[]];

    var it_33556522 = f_33556513;
    var i_33556523 = 0;
    var total_33556524 = 0;
    var tempFrames_33556525 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555824);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556522 == null)) && (i_33556523 <= 63))) break Label2;
          tempFrames_33556525[i_33556523].Field0 = it_33556522.procname;
          tempFrames_33556525[i_33556523].Field1 = it_33556522.line;
          tempFrames_33556525[i_33556523].Field2 = it_33556522.filename;
          i_33556523 += 1;
          total_33556524 += 1;
          it_33556522 = it_33556522.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556522 == null))) break Label4;
          total_33556524 += 1;
          it_33556522 = it_33556522.prev;
        }
    };
    result_33556514[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556524 == i_33556523))) {
    result_33556514[0].push.apply(result_33556514[0], [40]);;
    result_33556514[0].push.apply(result_33556514[0], HEX24_369098760((total_33556524 - i_33556523)));;
    result_33556514[0].push.apply(result_33556514[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556558 = 0;
      var colontmp__553648416 = 0;
      colontmp__553648416 = (i_33556523 - 1);
      var res_553648418 = colontmp__553648416;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_553648418)) break Label7;
            j_33556558 = res_553648418;
            result_33556514[0].push.apply(result_33556514[0], cstrToNimstr(tempFrames_33556525[j_33556558].Field2));;
            if ((0 < tempFrames_33556525[j_33556558].Field1)) {
            result_33556514[0].push.apply(result_33556514[0], [40]);;
            addInt_301990111(result_33556514, 0, tempFrames_33556525[j_33556558].Field1);
            if (false) {
            result_33556514[0].push.apply(result_33556514[0], [44,32]);;
            addInt_301990111(result_33556514, 0, 0);
            }
            
            result_33556514[0].push.apply(result_33556514[0], [41]);;
            }
            
            result_33556514[0].push.apply(result_33556514[0], [32,97,116,32]);;
            add_33556386(result_33556514, 0, tempFrames_33556525[j_33556558].Field0);
            result_33556514[0].push.apply(result_33556514[0], [10]);;
            res_553648418 -= 1;
          }
      };
    };

  return result_33556514[0];

}

function rawWriteStackTrace_33556599() {
  var result_33556600 = [];

    if (!((framePtr == null))) {
    result_33556600 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556512(framePtr) || []), NTI33554449);
    }
    else {
      result_33556600 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556600;

}

function unhandledException(e_33556638) {
    var buf_33556639 = [[]];
    if (!(((e_33556638.message).length == 0))) {
    buf_33556639[0].push.apply(buf_33556639[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556639[0].push.apply(buf_33556639[0], e_33556638.message);;
    }
    else {
    buf_33556639[0].push.apply(buf_33556639[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556639[0].push.apply(buf_33556639[0], [32,91]);;
    add_33556386(buf_33556639, 0, e_33556638.name);
    buf_33556639[0].push.apply(buf_33556639[0], [93,10]);;
    buf_33556639[0].push.apply(buf_33556639[0], rawWriteStackTrace_33556599());;
    var cbuf_33556640 = toJSStr(buf_33556639[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556640);
  }
  else {
    throw cbuf_33556640;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556995) {
        if (a_33556995 > 2147483647 || a_33556995 < -2147483648) raiseOverflow();
  

  
}

function HEX3DHEX3D_553648250(x_553648252, y_553648253) {
  var result_553648254 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 326;
    var sameObject_553648262 = false;
    F.line = 327;
    sameObject_553648262 = x_553648252 === y_553648253
    if (sameObject_553648262) {
    F.line = 328;
    result_553648254 = true;
    break BeforeRet;
    }
    
    if (!(((x_553648252).length == (y_553648253).length))) {
    F.line = 331;
    result_553648254 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 333;
      var i_553648276 = 0;
      F.line = 75;
      var colontmp__553648410 = 0;
      F.line = 333;
      colontmp__553648410 = subInt((x_553648252).length, 1);
      F.line = 90;
      var res_553648411 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_553648411 <= colontmp__553648410)) break Label3;
            F.line = 333;
            i_553648276 = res_553648411;
            if (!((x_553648252[chckIndx(i_553648276, 0, (x_553648252).length - 1)] == y_553648253[chckIndx(i_553648276, 0, (y_553648253).length - 1)]))) {
            F.line = 335;
            result_553648254 = false;
            break BeforeRet;
            }
            
            F.line = 93;
            res_553648411 = addInt(res_553648411, 1);
          }
      };
    };
    F.line = 337;
    result_553648254 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_553648254;

}

function HEX3DHEX3D_553648240(x_553648242, y_553648243) {
  var result_553648244 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (!(eqStrings(x_553648242["Field0"], y_553648243["Field0"]))) {
    F.line = 1657;
    result_553648244 = false;
    break BeforeRet;
    }
    
    if (!((x_553648242["Field1"] == y_553648243["Field1"]))) {
    F.line = 1657;
    result_553648244 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_553648250(x_553648242["Field2"], y_553648243["Field2"]))) {
    F.line = 1657;
    result_553648244 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(x_553648242["Field3"], y_553648243["Field3"]))) {
    F.line = 1657;
    result_553648244 = false;
    break BeforeRet;
    }
    
    F.line = 1658;
    result_553648244 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_553648244;

}

function initBibleVerse_553648144() {
  var result_553648145 = {Field0: [], Field1: 0, Field2: [], Field3: []};

  var F = {procname: "verses.initBibleVerse", prev: framePtr, filename: "/data/os/dev/nim/bibleTools/src/bibleTools/verses.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  return result_553648145;

}

function en_1140850690(self_1140850691) {
    var Temporary1;

  var result_1140850692 = [];

  var F = {procname: "english.en", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/english.nim", line: 0};
  framePtr = F;
    F.line = 4;
    F.line = 5;
    switch (self_1140850691) {
    case 1:
      Temporary1 = [71,101,110,101,115,105,115];
      break;
    case 2:
      Temporary1 = [69,120,111,100,117,115];
      break;
    case 3:
      Temporary1 = [76,101,118,105,116,105,99,117,115];
      break;
    case 4:
      Temporary1 = [78,117,109,98,101,114,115];
      break;
    case 5:
      Temporary1 = [68,101,117,116,101,114,111,110,111,109,121];
      break;
    case 6:
      Temporary1 = [74,117,98,105,108,101,101,115];
      break;
    case 7:
      Temporary1 = [69,110,111,99,104];
      break;
    case 8:
      Temporary1 = [74,97,115,104,101,114];
      break;
    case 9:
      Temporary1 = [74,111,115,104,117,97];
      break;
    case 10:
      Temporary1 = [74,117,100,103,101,115];
      break;
    case 11:
      Temporary1 = [49,32,83,97,109,117,101,108];
      break;
    case 12:
      Temporary1 = [50,32,83,97,109,117,101,108];
      break;
    case 13:
      Temporary1 = [49,32,75,105,110,103,115];
      break;
    case 14:
      Temporary1 = [50,32,75,105,110,103,115];
      break;
    case 15:
      Temporary1 = [73,115,97,105,97,104];
      break;
    case 16:
      Temporary1 = [74,101,114,101,109,105,97,104];
      break;
    case 17:
      Temporary1 = [69,112,105,115,116,108,101,32,79,102,32,74,101,114,101,109,105,97,104];
      break;
    case 18:
      Temporary1 = [69,122,101,107,105,101,108];
      break;
    case 19:
      Temporary1 = [84,111,98,105,116];
      break;
    case 20:
      Temporary1 = [49,32,66,97,114,117,107];
      break;
    case 21:
      Temporary1 = [50,32,66,97,114,117,107];
      break;
    case 22:
      Temporary1 = [72,111,115,101,97];
      break;
    case 23:
      Temporary1 = [74,111,101,108];
      break;
    case 24:
      Temporary1 = [65,109,111,115];
      break;
    case 25:
      Temporary1 = [79,98,97,100,105,97,104];
      break;
    case 26:
      Temporary1 = [74,111,110,97,104];
      break;
    case 27:
      Temporary1 = [77,105,99,97,104];
      break;
    case 28:
      Temporary1 = [78,97,104,117,109];
      break;
    case 29:
      Temporary1 = [72,97,98,97,107,107,117,107];
      break;
    case 30:
      Temporary1 = [90,101,112,104,97,110,105,97,104];
      break;
    case 31:
      Temporary1 = [72,97,103,103,97,105];
      break;
    case 32:
      Temporary1 = [90,101,99,104,97,114,105,97,104];
      break;
    case 33:
      Temporary1 = [77,97,108,97,99,104,105];
      break;
    case 34:
      Temporary1 = [80,115,97,108,109,115];
      break;
    case 35:
      Temporary1 = [80,114,111,118,101,114,98,115];
      break;
    case 36:
      Temporary1 = [74,111,98];
      break;
    case 37:
      Temporary1 = [87,105,115,100,111,109,32,79,102,32,83,111,108,111,109,111,110];
      break;
    case 38:
      Temporary1 = [83,105,114,97,99,104];
      break;
    case 39:
      Temporary1 = [83,111,110,103,32,79,102,32,83,111,108,111,109,111,110];
      break;
    case 40:
      Temporary1 = [82,117,116,104];
      break;
    case 41:
      Temporary1 = [76,97,109,101,110,116,97,116,105,111,110,115];
      break;
    case 42:
      Temporary1 = [69,99,99,108,101,115,105,97,115,116,101,115];
      break;
    case 43:
      Temporary1 = [69,115,116,104,101,114];
      break;
    case 44:
      Temporary1 = [65,100,100,105,116,105,111,110,115,32,84,111,32,69,115,116,104,101,114];
      break;
    case 45:
      Temporary1 = [74,117,100,105,116,104];
      break;
    case 46:
      Temporary1 = [49,32,67,104,114,111,110,105,99,108,101,115];
      break;
    case 47:
      Temporary1 = [50,32,67,104,114,111,110,105,99,108,101,115];
      break;
    case 48:
      Temporary1 = [80,114,97,121,101,114,32,79,102,32,77,97,110,97,115,115,101,104];
      break;
    case 49:
      Temporary1 = [68,97,110,105,101,108];
      break;
    case 50:
      Temporary1 = [80,114,97,121,101,114,32,79,102,32,65,122,97,114,105,97,104];
      break;
    case 51:
      Temporary1 = [83,117,115,97,110,110,97];
      break;
    case 52:
      Temporary1 = [66,101,108,32,65,110,100,32,84,104,101,32,68,114,97,103,111,110];
      break;
    case 53:
      Temporary1 = [69,122,114,97];
      break;
    case 54:
      Temporary1 = [78,101,104,101,109,105,97,104];
      break;
    case 55:
      Temporary1 = [51,32,69,122,114,97];
      break;
    case 56:
      Temporary1 = [52,32,69,122,114,97];
      break;
    case 57:
      Temporary1 = [49,32,77,97,99,99,97,98,101,101,115];
      break;
    case 58:
      Temporary1 = [50,32,77,97,99,99,97,98,101,101,115];
      break;
    case 59:
      Temporary1 = [51,32,77,97,99,99,97,98,101,101,115];
      break;
    case 60:
      Temporary1 = [52,32,77,97,99,99,97,98,101,101,115];
      break;
    case 61:
      Temporary1 = [77,97,116,116,104,101,119];
      break;
    case 62:
      Temporary1 = [77,97,114,107];
      break;
    case 63:
      Temporary1 = [76,117,107,101];
      break;
    case 64:
      Temporary1 = [65,99,116,115];
      break;
    case 65:
      Temporary1 = [74,97,109,101,115];
      break;
    case 66:
      Temporary1 = [49,32,80,101,116,101,114];
      break;
    case 67:
      Temporary1 = [50,32,80,101,116,101,114];
      break;
    case 68:
      Temporary1 = [74,117,100,101];
      break;
    case 69:
      Temporary1 = [49,32,84,105,109,111,116,104,121];
      break;
    case 70:
      Temporary1 = [84,105,116,117,115];
      break;
    case 71:
      Temporary1 = [49,32,84,104,101,115,115,97,108,111,110,105,97,110,115];
      break;
    case 72:
      Temporary1 = [50,32,84,104,101,115,115,97,108,111,110,105,97,110,115];
      break;
    case 73:
      Temporary1 = [82,111,109,97,110,115];
      break;
    case 74:
      Temporary1 = [71,97,108,97,116,105,97,110,115];
      break;
    case 75:
      Temporary1 = [50,32,84,105,109,111,116,104,121];
      break;
    case 76:
      Temporary1 = [49,32,67,111,114,105,110,116,104,105,97,110,115];
      break;
    case 77:
      Temporary1 = [50,32,67,111,114,105,110,116,104,105,97,110,115];
      break;
    case 78:
      Temporary1 = [69,112,104,101,115,105,97,110,115];
      break;
    case 79:
      Temporary1 = [80,104,105,108,105,112,112,105,97,110,115];
      break;
    case 80:
      Temporary1 = [67,111,108,111,115,115,105,97,110,115];
      break;
    case 82:
      Temporary1 = [80,104,105,108,101,109,111,110];
      break;
    case 83:
      Temporary1 = [72,101,98,114,101,119,115];
      break;
    case 84:
      Temporary1 = [74,111,104,110];
      break;
    case 85:
      Temporary1 = [49,32,74,111,104,110];
      break;
    case 86:
      Temporary1 = [50,32,74,111,104,110];
      break;
    case 87:
      Temporary1 = [51,32,74,111,104,110];
      break;
    case 88:
      Temporary1 = [82,101,118,101,108,97,116,105,111,110];
      break;
    default: 
      Temporary1 = [85,110,107,110,111,119,110,32,98,111,111,107,32,110,97,109,101];
      break;
    }
    result_1140850692 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1140850692;

}

function nsuToLowerAsciiChar(c_754974804) {
  var result_754974805 = 0;

  var F = {procname: "strutils.toLowerAscii", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((ConstSet2[c_754974804] != undefined)) {
    F.line = 218;
    result_754974805 = (c_754974804 ^ 32);
    }
    else {
      F.line = 220;
      result_754974805 = c_754974804;
    }
    
  framePtr = F.prev;

  return result_754974805;

}

function nsuToLowerAsciiStr(s_754974814) {
  var result_754974815 = [];

  var F = {procname: "strutils.toLowerAscii", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 223;
    result_754974815 = nimCopy(null, mnewString(chckRange((s_754974814).length, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 224;
      var iHEX60gensym7_754974821 = 0;
      F.line = 75;
      var colontmp__1140850785 = 0;
      F.line = 224;
      colontmp__1140850785 = subInt((s_754974814).length, 1);
      F.line = 90;
      var res_1140850786 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_1140850786 <= colontmp__1140850785)) break Label3;
            F.line = 238;
            iHEX60gensym7_754974821 = res_1140850786;
            F.line = 238;
            result_754974815[chckIndx(iHEX60gensym7_754974821, 0, (result_754974815).length - 1)] = nsuToLowerAsciiChar(s_754974814[chckIndx(iHEX60gensym7_754974821, 0, (s_754974814).length - 1)]);
            F.line = 93;
            res_1140850786 = addInt(res_1140850786, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754974815;

}

function nsuContinuesWith(s_754976212, substr_754976213, start_754976214) {
  var result_754976215 = false;

  var F = {procname: "strutils.continuesWith", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1636;
    var i_754976216 = 0;
    Label1: {
      F.line = 1637;
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_754976213).length <= i_754976216)) {
          F.line = 1638;
          result_754976215 = true;
          break BeforeRet;
          }
          
          if ((((s_754976212).length <= addInt(i_754976216, start_754976214)) || !((s_754976212[chckIndx(addInt(i_754976216, start_754976214), 0, (s_754976212).length - 1)] == substr_754976213[chckIndx(i_754976216, 0, (substr_754976213).length - 1)])))) {
          F.line = 1639;
          result_754976215 = false;
          break BeforeRet;
          }
          
          F.line = 1640;
          i_754976216 = addInt(i_754976216, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_754976215;

}

function multiReplace_754976645(s_754976646, replacements_754976647) {
                      var Temporary10;

  var result_754976648 = [];

  var F = {procname: "strutils.multiReplace", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2240;
    result_754976648 = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 2241;
    var i_754976649 = 0;
    F.line = 2242;
    var fastChk_754976650 = nimCopy(null, ConstSet3, NTI754976051);
    Label1: {
      F.line = 2243;
      var sub_754976664 = [];
      F.line = 2243;
      var by_754976665 = [];
      F.line = 13;
      var i_1140850778 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_1140850778 < (replacements_754976647).length)) break Label3;
            F.line = 2243;
            sub_754976664 = replacements_754976647[chckIndx(i_1140850778, 0, (replacements_754976647).length - 1)]["Field0"];
            F.line = 2243;
            by_754976665 = replacements_754976647[chckIndx(i_1140850778, 0, (replacements_754976647).length - 1)]["Field1"];
            if ((0 < (sub_754976664).length)) {
            F.line = 2246;
            fastChk_754976650[sub_754976664[chckIndx(0, 0, (sub_754976664).length - 1)]] = true;
            }
            
            F.line = 16;
            i_1140850778 = addInt(i_1140850778, 1);
          }
      };
    };
    Label4: {
      F.line = 2247;
        Label5: while (true) {
        if (!(i_754976649 < (s_754976646).length)) break Label5;
          Label6: {
            if ((fastChk_754976650[s_754976646[chckIndx(i_754976649, 0, (s_754976646).length - 1)]] != undefined)) {
            Label7: {
              F.line = 2251;
              var sub_754976678 = [];
              F.line = 2251;
              var by_754976679 = [];
              F.line = 13;
              var i_1140850782 = 0;
              Label8: {
                F.line = 14;
                  Label9: while (true) {
                  if (!(i_1140850782 < (replacements_754976647).length)) break Label9;
                    F.line = 2251;
                    sub_754976678 = replacements_754976647[chckIndx(i_1140850782, 0, (replacements_754976647).length - 1)]["Field0"];
                    F.line = 2251;
                    by_754976679 = replacements_754976647[chckIndx(i_1140850782, 0, (replacements_754976647).length - 1)]["Field1"];
                      if (!(0 < (sub_754976678).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_754976646, sub_754976678, chckRange(i_754976649, 0, 2147483647));                      }                    if (Temporary10) {
                    F.line = 2253;
                    result_754976648.push.apply(result_754976648, by_754976679);;
                    F.line = 2254;
                    i_754976649 = addInt(i_754976649, (sub_754976678).length);
                    F.line = 2255;
                    break Label6;
                    }
                    
                    F.line = 16;
                    i_1140850782 = addInt(i_1140850782, 1);
                  }
              };
            };
            }
            
            F.line = 2258;
            addChar(result_754976648, s_754976646[chckIndx(i_754976649, 0, (s_754976646).length - 1)]);;
            F.line = 2259;
            i_754976649 = addInt(i_754976649, 1);
          };
        }
    };
  framePtr = F.prev;

  return result_754976648;

}

function removeAccent_1056964936(str_1056964937) {
  var result_1056964938 = [];

  var F = {procname: "forStr.removeAccent", prev: framePtr, filename: "/data/os/config/.nimble/pkgs/util-1.14.1/util/forStr.nim", line: 0};
  framePtr = F;
    F.line = 274;
    result_1056964938 = nimCopy(null, multiReplace_754976645(str_1056964937, [{Field0: [194,170], Field1: [97]}, {Field0: [194,186], Field1: [111]}, {Field0: [195,128], Field1: [65]}, {Field0: [195,129], Field1: [65]}, {Field0: [195,130], Field1: [65]}, {Field0: [195,131], Field1: [65]}, {Field0: [195,132], Field1: [65]}, {Field0: [195,133], Field1: [65]}, {Field0: [195,134], Field1: [65,69]}, {Field0: [195,135], Field1: [67]}, {Field0: [195,136], Field1: [69]}, {Field0: [195,137], Field1: [69]}, {Field0: [195,138], Field1: [69]}, {Field0: [195,139], Field1: [69]}, {Field0: [195,140], Field1: [73]}, {Field0: [195,141], Field1: [73]}, {Field0: [195,142], Field1: [73]}, {Field0: [195,143], Field1: [73]}, {Field0: [195,144], Field1: [68]}, {Field0: [195,145], Field1: [78]}, {Field0: [195,146], Field1: [79]}, {Field0: [195,147], Field1: [79]}, {Field0: [195,148], Field1: [79]}, {Field0: [195,149], Field1: [79]}, {Field0: [195,150], Field1: [79]}, {Field0: [195,153], Field1: [85]}, {Field0: [195,154], Field1: [85]}, {Field0: [195,155], Field1: [85]}, {Field0: [195,156], Field1: [85]}, {Field0: [195,157], Field1: [89]}, {Field0: [195,158], Field1: [84,72]}, {Field0: [195,159], Field1: [115]}, {Field0: [195,160], Field1: [97]}, {Field0: [195,161], Field1: [97]}, {Field0: [195,162], Field1: [97]}, {Field0: [195,163], Field1: [97]}, {Field0: [195,164], Field1: [97]}, {Field0: [195,165], Field1: [97]}, {Field0: [195,166], Field1: [97,101]}, {Field0: [195,167], Field1: [99]}, {Field0: [195,168], Field1: [101]}, {Field0: [195,169], Field1: [101]}, {Field0: [195,170], Field1: [101]}, {Field0: [195,171], Field1: [101]}, {Field0: [195,172], Field1: [105]}, {Field0: [195,173], Field1: [105]}, {Field0: [195,174], Field1: [105]}, {Field0: [195,175], Field1: [105]}, {Field0: [195,176], Field1: [100]}, {Field0: [195,177], Field1: [110]}, {Field0: [195,178], Field1: [111]}, {Field0: [195,179], Field1: [111]}, {Field0: [195,180], Field1: [111]}, {Field0: [195,181], Field1: [111]}, {Field0: [195,182], Field1: [111]}, {Field0: [195,184], Field1: [111]}, {Field0: [195,185], Field1: [117]}, {Field0: [195,186], Field1: [117]}, {Field0: [195,187], Field1: [117]}, {Field0: [195,188], Field1: [117]}, {Field0: [195,189], Field1: [121]}, {Field0: [195,190], Field1: [116,104]}, {Field0: [195,191], Field1: [121]}, {Field0: [195,152], Field1: [79]}, {Field0: [196,128], Field1: [65]}, {Field0: [196,129], Field1: [97]}, {Field0: [196,130], Field1: [65]}, {Field0: [196,131], Field1: [97]}, {Field0: [196,132], Field1: [65]}, {Field0: [196,133], Field1: [97]}, {Field0: [196,134], Field1: [67]}, {Field0: [196,135], Field1: [99]}, {Field0: [196,136], Field1: [67]}, {Field0: [196,137], Field1: [99]}, {Field0: [196,138], Field1: [67]}, {Field0: [196,139], Field1: [99]}, {Field0: [196,140], Field1: [67]}, {Field0: [196,141], Field1: [99]}, {Field0: [196,142], Field1: [68]}, {Field0: [196,143], Field1: [100]}, {Field0: [196,144], Field1: [68]}, {Field0: [196,145], Field1: [100]}, {Field0: [196,146], Field1: [69]}, {Field0: [196,147], Field1: [101]}, {Field0: [196,148], Field1: [69]}, {Field0: [196,149], Field1: [101]}, {Field0: [196,150], Field1: [69]}, {Field0: [196,151], Field1: [101]}, {Field0: [196,152], Field1: [69]}, {Field0: [196,153], Field1: [101]}, {Field0: [196,154], Field1: [69]}, {Field0: [196,155], Field1: [101]}, {Field0: [196,156], Field1: [71]}, {Field0: [196,157], Field1: [103]}, {Field0: [196,158], Field1: [71]}, {Field0: [196,159], Field1: [103]}, {Field0: [196,160], Field1: [71]}, {Field0: [196,161], Field1: [103]}, {Field0: [196,162], Field1: [71]}, {Field0: [196,163], Field1: [103]}, {Field0: [196,164], Field1: [72]}, {Field0: [196,165], Field1: [104]}, {Field0: [196,166], Field1: [72]}, {Field0: [196,167], Field1: [104]}, {Field0: [196,168], Field1: [73]}, {Field0: [196,169], Field1: [105]}, {Field0: [196,170], Field1: [73]}, {Field0: [196,171], Field1: [105]}, {Field0: [196,172], Field1: [73]}, {Field0: [196,173], Field1: [105]}, {Field0: [196,174], Field1: [73]}, {Field0: [196,175], Field1: [105]}, {Field0: [196,176], Field1: [73]}, {Field0: [196,177], Field1: [105]}, {Field0: [196,178], Field1: [73,74]}, {Field0: [196,179], Field1: [105,106]}, {Field0: [196,180], Field1: [74]}, {Field0: [196,181], Field1: [106]}, {Field0: [196,182], Field1: [75]}, {Field0: [196,183], Field1: [107]}, {Field0: [196,184], Field1: [107]}, {Field0: [196,185], Field1: [76]}, {Field0: [196,186], Field1: [108]}, {Field0: [196,187], Field1: [76]}, {Field0: [196,188], Field1: [108]}, {Field0: [196,189], Field1: [76]}, {Field0: [196,190], Field1: [108]}, {Field0: [196,191], Field1: [76]}, {Field0: [197,128], Field1: [108]}, {Field0: [197,129], Field1: [76]}, {Field0: [197,130], Field1: [108]}, {Field0: [197,131], Field1: [78]}, {Field0: [197,132], Field1: [110]}, {Field0: [197,133], Field1: [78]}, {Field0: [197,134], Field1: [110]}, {Field0: [197,135], Field1: [78]}, {Field0: [197,136], Field1: [110]}, {Field0: [197,137], Field1: [110]}, {Field0: [197,138], Field1: [78]}, {Field0: [197,139], Field1: [110]}, {Field0: [197,140], Field1: [79]}, {Field0: [197,141], Field1: [111]}, {Field0: [197,142], Field1: [79]}, {Field0: [197,143], Field1: [111]}, {Field0: [197,144], Field1: [79]}, {Field0: [197,145], Field1: [111]}, {Field0: [197,146], Field1: [79,69]}, {Field0: [197,147], Field1: [111,101]}, {Field0: [197,148], Field1: [82]}, {Field0: [197,149], Field1: [114]}, {Field0: [197,150], Field1: [82]}, {Field0: [197,151], Field1: [114]}, {Field0: [197,152], Field1: [82]}, {Field0: [197,153], Field1: [114]}, {Field0: [197,154], Field1: [83]}, {Field0: [197,155], Field1: [115]}, {Field0: [197,156], Field1: [83]}, {Field0: [197,157], Field1: [115]}, {Field0: [197,158], Field1: [83]}, {Field0: [197,159], Field1: [115]}, {Field0: [197,160], Field1: [83]}, {Field0: [197,161], Field1: [115]}, {Field0: [197,162], Field1: [84]}, {Field0: [197,163], Field1: [116]}, {Field0: [197,164], Field1: [84]}, {Field0: [197,165], Field1: [116]}, {Field0: [197,166], Field1: [84]}, {Field0: [197,167], Field1: [116]}, {Field0: [197,168], Field1: [85]}, {Field0: [197,169], Field1: [117]}, {Field0: [197,170], Field1: [85]}, {Field0: [197,171], Field1: [117]}, {Field0: [197,172], Field1: [85]}, {Field0: [197,173], Field1: [117]}, {Field0: [197,174], Field1: [85]}, {Field0: [197,175], Field1: [117]}, {Field0: [197,176], Field1: [85]}, {Field0: [197,177], Field1: [117]}, {Field0: [197,178], Field1: [85]}, {Field0: [197,179], Field1: [117]}, {Field0: [197,180], Field1: [87]}, {Field0: [197,181], Field1: [119]}, {Field0: [197,182], Field1: [89]}, {Field0: [197,183], Field1: [121]}, {Field0: [197,184], Field1: [89]}, {Field0: [197,185], Field1: [90]}, {Field0: [197,186], Field1: [122]}, {Field0: [197,187], Field1: [90]}, {Field0: [197,188], Field1: [122]}, {Field0: [197,189], Field1: [90]}, {Field0: [197,190], Field1: [122]}, {Field0: [197,191], Field1: [115]}, {Field0: [200,152], Field1: [83]}, {Field0: [200,153], Field1: [115]}, {Field0: [200,154], Field1: [84]}, {Field0: [200,155], Field1: [116]}, {Field0: [226,130,172], Field1: [69]}, {Field0: [194,163], Field1: []}, {Field0: [198,160], Field1: [79]}, {Field0: [198,161], Field1: [111]}, {Field0: [198,175], Field1: [85]}, {Field0: [198,176], Field1: [117]}, {Field0: [225,186,166], Field1: [65]}, {Field0: [225,186,167], Field1: [97]}, {Field0: [225,186,176], Field1: [65]}, {Field0: [225,186,177], Field1: [97]}, {Field0: [225,187,128], Field1: [69]}, {Field0: [225,187,129], Field1: [101]}, {Field0: [225,187,146], Field1: [79]}, {Field0: [225,187,147], Field1: [111]}, {Field0: [225,187,156], Field1: [79]}, {Field0: [225,187,157], Field1: [111]}, {Field0: [225,187,170], Field1: [85]}, {Field0: [225,187,171], Field1: [117]}, {Field0: [225,187,178], Field1: [89]}, {Field0: [225,187,179], Field1: [121]}, {Field0: [225,186,162], Field1: [65]}, {Field0: [225,186,163], Field1: [97]}, {Field0: [225,186,168], Field1: [65]}, {Field0: [225,186,169], Field1: [97]}, {Field0: [225,186,178], Field1: [65]}, {Field0: [225,186,179], Field1: [97]}, {Field0: [225,186,186], Field1: [69]}, {Field0: [225,186,187], Field1: [101]}, {Field0: [225,187,130], Field1: [69]}, {Field0: [225,187,131], Field1: [101]}, {Field0: [225,187,136], Field1: [73]}, {Field0: [225,187,137], Field1: [105]}, {Field0: [225,187,142], Field1: [79]}, {Field0: [225,187,143], Field1: [111]}, {Field0: [225,187,148], Field1: [79]}, {Field0: [225,187,149], Field1: [111]}, {Field0: [225,187,158], Field1: [79]}, {Field0: [225,187,159], Field1: [111]}, {Field0: [225,187,166], Field1: [85]}, {Field0: [225,187,167], Field1: [117]}, {Field0: [225,187,172], Field1: [85]}, {Field0: [225,187,173], Field1: [117]}, {Field0: [225,187,182], Field1: [89]}, {Field0: [225,187,183], Field1: [121]}, {Field0: [225,186,170], Field1: [65]}, {Field0: [225,186,171], Field1: [97]}, {Field0: [225,186,180], Field1: [65]}, {Field0: [225,186,181], Field1: [97]}, {Field0: [225,186,188], Field1: [69]}, {Field0: [225,186,189], Field1: [101]}, {Field0: [225,187,132], Field1: [69]}, {Field0: [225,187,133], Field1: [101]}, {Field0: [225,187,150], Field1: [79]}, {Field0: [225,187,151], Field1: [111]}, {Field0: [225,187,160], Field1: [79]}, {Field0: [225,187,161], Field1: [111]}, {Field0: [225,187,174], Field1: [85]}, {Field0: [225,187,175], Field1: [117]}, {Field0: [225,187,184], Field1: [89]}, {Field0: [225,187,185], Field1: [121]}, {Field0: [225,186,164], Field1: [65]}, {Field0: [225,186,165], Field1: [97]}, {Field0: [225,186,174], Field1: [65]}, {Field0: [225,186,175], Field1: [97]}, {Field0: [225,186,190], Field1: [69]}, {Field0: [225,186,191], Field1: [101]}, {Field0: [225,187,144], Field1: [79]}, {Field0: [225,187,145], Field1: [111]}, {Field0: [225,187,154], Field1: [79]}, {Field0: [225,187,155], Field1: [111]}, {Field0: [225,187,168], Field1: [85]}, {Field0: [225,187,169], Field1: [117]}, {Field0: [225,186,160], Field1: [65]}, {Field0: [225,186,161], Field1: [97]}, {Field0: [225,186,172], Field1: [65]}, {Field0: [225,186,173], Field1: [97]}, {Field0: [225,186,182], Field1: [65]}, {Field0: [225,186,183], Field1: [97]}, {Field0: [225,186,184], Field1: [69]}, {Field0: [225,186,185], Field1: [101]}, {Field0: [225,187,134], Field1: [69]}, {Field0: [225,187,135], Field1: [101]}, {Field0: [225,187,138], Field1: [73]}, {Field0: [225,187,139], Field1: [105]}, {Field0: [225,187,140], Field1: [79]}, {Field0: [225,187,141], Field1: [111]}, {Field0: [225,187,152], Field1: [79]}, {Field0: [225,187,153], Field1: [111]}, {Field0: [225,187,162], Field1: [79]}, {Field0: [225,187,163], Field1: [111]}, {Field0: [225,187,164], Field1: [85]}, {Field0: [225,187,165], Field1: [117]}, {Field0: [225,187,176], Field1: [85]}, {Field0: [225,187,177], Field1: [117]}, {Field0: [225,187,180], Field1: [89]}, {Field0: [225,187,181], Field1: [121]}, {Field0: [201,145], Field1: [97]}, {Field0: [199,149], Field1: [85]}, {Field0: [199,150], Field1: [117]}, {Field0: [199,151], Field1: [85]}, {Field0: [199,152], Field1: [117]}, {Field0: [199,141], Field1: [65]}, {Field0: [199,142], Field1: [97]}, {Field0: [199,143], Field1: [73]}, {Field0: [199,144], Field1: [105]}, {Field0: [199,145], Field1: [79]}, {Field0: [199,146], Field1: [111]}, {Field0: [199,147], Field1: [85]}, {Field0: [199,148], Field1: [117]}, {Field0: [199,153], Field1: [85]}, {Field0: [199,154], Field1: [117]}, {Field0: [199,155], Field1: [85]}, {Field0: [199,156], Field1: [117]}]), NTI33554449);
  framePtr = F.prev;

  return result_1056964938;

}

function sysFatal_268435497(message_268435500) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 51;
    raiseException({message: nimCopy(null, message_268435500, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435495(msg_268435496) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    sysFatal_268435497(msg_268435496);
  framePtr = F.prev;

  
}

function failedAssertImpl_268435531(msg_268435532) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 46;
    raiseAssert_268435495(msg_268435532);
  framePtr = F.prev;

  
}

function normalize_1040187495(s_1040187496) {
  var result_1040187497 = {Field0: [], Field1: [], Field2: []};

  var F = {procname: "base.normalize", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/base.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 32;
      var i_1040187498 = 0;
      F.line = 32;
      var ch_1040187499 = 0;
      F.line = 191;
      var colontmp__1140850771 = [];
      F.line = 32;
      colontmp__1140850771 = nsuToLowerAsciiStr(removeAccent_1056964936(s_1040187496));
      F.line = 193;
      var i_1140850773 = 0;
      F.line = 194;
      var L_1140850774 = (colontmp__1140850771).length;
      Label2: {
        F.line = 195;
          Label3: while (true) {
          if (!(i_1140850773 < L_1140850774)) break Label3;
            F.line = 32;
            i_1040187498 = i_1140850773;
            F.line = 32;
            ch_1040187499 = colontmp__1140850771[chckIndx(i_1140850773, 0, (colontmp__1140850771).length - 1)];
            if ((ConstSet4[ch_1040187499] != undefined)) {
            F.line = 34;
            addChar(result_1040187497.Field0, ch_1040187499);;
            }
            else {
            if ((ConstSet5[ch_1040187499] != undefined)) {
            F.line = 36;
            addChar(result_1040187497.Field1, ch_1040187499);;
            }
            else {
              F.line = 38;
            result_1040187497.Field2.push(nimCharToStr(s_1040187496[chckIndx(i_1040187498, 0, (s_1040187496).length - 1)]));;
            }
            }
            F.line = 197;
            i_1140850773 = addInt(i_1140850773, 1);
            if (!(((colontmp__1140850771).length == L_1140850774))) {
            F.line = 198;
            failedAssertImpl_268435531(makeNimstrLit("/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_1040187497;

}

function substrEq_754974974(s_754974975, pos_754974976, substr_754974977) {
  var result_754974978 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 369;
    var i_754974979 = 0;
    F.line = 370;
    var length_754974980 = (substr_754974977).length;
    Label1: {
      F.line = 371;
        Label2: while (true) {
        if (!(((i_754974979 < length_754974980) && (addInt(pos_754974976, i_754974979) < (s_754974975).length)) && (s_754974975[chckIndx(addInt(pos_754974976, i_754974979), 0, (s_754974975).length - 1)] == substr_754974977[chckIndx(i_754974979, 0, (substr_754974977).length - 1)]))) break Label2;
          F.line = 372;
          i_754974979 = addInt(i_754974979, 1);
        }
    };
    F.line = 373;
    result_754974978 = (i_754974979 == length_754974980);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_754974978;

}

function substr_33557987(s_33557988, first_33557989, last_33557990) {
  var result_33557991 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2616;
    var first_33557992 = nimMax(first_33557989, 0);
    F.line = 2617;
    var L_33557993 = nimMax(addInt(subInt(nimMin(last_33557990, (s_33557988).length - 1), first_33557992), 1), 0);
    F.line = 2618;
    result_33557991 = nimCopy(null, mnewString(chckRange(L_33557993, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2619;
      var i_33557998 = 0;
      F.line = 75;
      var colontmp__553648447 = 0;
      F.line = 2619;
      colontmp__553648447 = subInt(L_33557993, 1);
      F.line = 90;
      var res_553648448 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_553648448 <= colontmp__553648447)) break Label3;
            F.line = 2619;
            i_33557998 = res_553648448;
            F.line = 2619;
            result_33557991[chckIndx(i_33557998, 0, (result_33557991).length - 1)] = s_33557988[chckIndx(addInt(i_33557998, first_33557992), 0, (s_33557988).length - 1)];
            F.line = 93;
            res_553648448 = addInt(res_553648448, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33557991;

}

function nsuSplitString(s_754975292, sep_754975293, maxsplit_754975294) {
  var result_754975295 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if (!((0 < (sep_754975293).length))) {
    F.line = 760;
    failedAssertImpl_268435531(makeNimstrLit("/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim(760, 11) `sep.len > 0` "));
    }
    
    F.line = 414;
    result_754975295 = nimCopy(null, [], NTI754975123);
    Label1: {
      F.line = 415;
      var xHEX60gensym71_754975306 = [];
      F.line = 386;
      var lastHEX60gensym40_553648440 = 0;
      F.line = 387;
      var splitsHEX60gensym40_553648441 = maxsplit_754975294;
      Label2: {
        F.line = 520;
          Label3: while (true) {
          if (!(lastHEX60gensym40_553648440 <= (s_754975292).length)) break Label3;
            F.line = 390;
            var firstHEX60gensym40_553648443 = lastHEX60gensym40_553648440;
            Label4: {
              F.line = 391;
                Label5: while (true) {
                if (!((lastHEX60gensym40_553648440 < (s_754975292).length) && !(substrEq_754974974(s_754975292, lastHEX60gensym40_553648440, sep_754975293)))) break Label5;
                  F.line = 392;
                  lastHEX60gensym40_553648440 = addInt(lastHEX60gensym40_553648440, 1);
                }
            };
            if ((splitsHEX60gensym40_553648441 == 0)) {
            F.line = 393;
            lastHEX60gensym40_553648440 = (s_754975292).length;
            }
            
            F.line = 762;
            xHEX60gensym71_754975306 = substr_33557987(s_754975292, firstHEX60gensym40_553648443, subInt(lastHEX60gensym40_553648440, 1));
            F.line = 762;
            var Temporary6 = nimCopy(null, xHEX60gensym71_754975306, NTI33554449);
            result_754975295.push(Temporary6);;
            if ((splitsHEX60gensym40_553648441 == 0)) {
            F.line = 395;
            break Label2;
            }
            
            F.line = 396;
            splitsHEX60gensym40_553648441 = subInt(splitsHEX60gensym40_553648441, 1);
            F.line = 397;
            lastHEX60gensym40_553648440 = addInt(lastHEX60gensym40_553648440, (sep_754975293).length);
          }
      };
    };
  framePtr = F.prev;

  return result_754975295;

}

function isANumber_1040187587(s_1040187588, text_1040187589, num_1040187590) {
  var F = {procname: "base.isANumber", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/base.nim", line: 0};
  framePtr = F;
    F.line = 58;
    var parts_1040187591 = nsuSplitString(s_1040187588.Field0, text_1040187589, -1);
    if ((1 < (parts_1040187591).length)) {
    F.line = 60;
    var newText_1040187595 = [];
    F.line = 61;
    s_1040187588.Field1.push.apply(s_1040187588.Field1, HEX24_369098760(num_1040187590));;
    Label1: {
      F.line = 62;
      var part_1040187617 = [];
      F.line = 241;
      var i_553648434 = 0;
      F.line = 242;
      var L_553648435 = (parts_1040187591).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_553648434 < L_553648435)) break Label3;
            F.line = 62;
            part_1040187617 = parts_1040187591[chckIndx(i_553648434, 0, (parts_1040187591).length - 1)];
            F.line = 62;
            newText_1040187595.push.apply(newText_1040187595, part_1040187617);;
            F.line = 245;
            i_553648434 = addInt(i_553648434, 1);
            if (!(((parts_1040187591).length == L_553648435))) {
            F.line = 246;
            failedAssertImpl_268435531(makeNimstrLit("/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 64;
    s_1040187588.Field0 = nimCopy(null, newText_1040187595, NTI33554449);
    }
    
  framePtr = F.prev;

  
}

function integerOutOfRangeError_771752261() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 421;
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 429;
    var sign_771752267 = -1;
    F.line = 430;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    F.line = 432;
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    F.line = 434;
    i_771752268 += 1;
    F.line = 435;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 437;
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
      F.line = 438;
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 439;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          F.line = 441;
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
            F.line = 443;
          integerOutOfRangeError_771752261();
          }
          
          F.line = 444;
          i_771752268 += 1;
          Label5: {
            F.line = 445;
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                F.line = 445;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    F.line = 447;
    integerOutOfRangeError_771752261();
    }
    else {
      F.line = 449;
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      F.line = 450;
      result_771752266 = i_771752268;
    }
    
    }
    
  framePtr = F.prev;

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 464;
    var res_771752328 = [0];
    F.line = 467;
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    F.line = 469;
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    
  framePtr = F.prev;

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    var res_771752333 = [0];
    F.line = 483;
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    F.line = 486;
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    F.line = 488;
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    
  framePtr = F.prev;

  return result_771752332;

}

function parseInt_771752831(s_771752832, number_771752833, number_771752833_Idx, start_771752834) {
  var result_771752835 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 999;
    result_771752835 = npuParseInt((s_771752832.slice(start_771752834, (s_771752832).length - 1 + 1)), number_771752833, number_771752833_Idx);
  framePtr = F.prev;

  return result_771752835;

}

function nsuParseInt(s_754975577) {
  var result_754975578 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1102;
    result_754975578[0] = 0;
    F.line = 1103;
    var L_754975579 = parseInt_771752831(s_754975577, result_754975578, 0, 0);
    if ((!((L_754975579 == (s_754975577).length)) || (L_754975579 == 0))) {
    F.line = 1105;
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_754975577 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_754975578[0];

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCorrectByNum_1040187512(s_1040187513, opts_1040187514) {
    var Temporary1;

  var result_1040187515 = 0;

  var F = {procname: "base.getCorrectByNum", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/base.nim", line: 0};
  framePtr = F;
    F.line = 42;
    F.line = 42;
++excHandler;
    try {
    Temporary1 = opts_1040187514[chckIndx(subInt(nsuParseInt(s_1040187513.Field1), 1), 0, (opts_1040187514).length - 1)];
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746)||isObj(lastJSError.m_type, NTI134217749))) {
    Temporary1 = 0;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
    result_1040187515 = Temporary1;
  framePtr = F.prev;

  return result_1040187515;

}

function getCorrectByNum_1040187529(s_1040187530, opts_1040187531) {
  var result_1040187532 = 0;

  var F = {procname: "base.getCorrectByNum", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/base.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 48;
    result_1040187532 = 0;
    F.line = 49;
++excHandler;
    try {
    Label2: {
      F.line = 50;
      var book_1040187546 = 0;
      F.line = 50;
      var num_1040187547 = 0;
      F.line = 13;
      var i_553648455 = 0;
      Label3: {
        F.line = 14;
          Label4: while (true) {
          if (!(i_553648455 < (opts_1040187531).length)) break Label4;
            F.line = 50;
            book_1040187546 = opts_1040187531[chckIndx(i_553648455, 0, (opts_1040187531).length - 1)]["Field0"];
            F.line = 50;
            num_1040187547 = opts_1040187531[chckIndx(i_553648455, 0, (opts_1040187531).length - 1)]["Field1"];
            if ((nsuParseInt(s_1040187530.Field1) == num_1040187547)) {
            F.line = 52;
            result_1040187532 = book_1040187546;
            break BeforeRet;
            }
            
            F.line = 16;
            i_553648455 = addInt(i_553648455, 1);
          }
      };
    };
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = F;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = F;
    }
  };
  framePtr = F.prev;

  return result_1040187532;

}

function identifyBibleBookEn_1140850693(bookName_1140850694) {
            var Temporary4;
    var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_1140850695 = 0;

  var F = {procname: "english.identifyBibleBookEn", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/english.nim", line: 0};
  framePtr = F;
    F.line = 101;
    var s_1140850714 = [normalize_1040187495(bookName_1140850694)];
    Label1: {
      F.line = 102;
      var t_1140850768 = [];
      F.line = 102;
      var n_1140850769 = 0;
      F.line = 38;
      var i_553648428 = 0;
      Label2: {
        F.line = 39;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 102;
            var colontmp__553648431 = nimCopy(null, (Temporary4 = [{Field0: [102,105,114,115,116], Field1: 1}, {Field0: [115,101,99,111,110,100], Field1: 2}, {Field0: [116,104,105,114,100], Field1: 3}, {Field0: [102,111,117,114,116,104], Field1: 4}], Temporary4)[chckIndx(i_553648428, 0, (Temporary4).length - 1)], NTI1140850703);
            F.line = 102;
            t_1140850768 = colontmp__553648431["Field0"];
            F.line = 102;
            n_1140850769 = colontmp__553648431["Field1"];
            F.line = 102;
            isANumber_1040187587(s_1140850714[0], t_1140850768, n_1140850769);
            if ((3 <= i_553648428)) {
            F.line = 41;
            break Label2;
            }
            
            F.line = 42;
            i_553648428 = addInt(i_553648428, 1);
          }
      };
    };
    F.line = 105;
    F.line = 105;
    switch (toJSStr(s_1140850714[0].Field0)) {
    case "gen":
    case "ge":
    case "gn":
    case "genesis":
      Temporary5 = 1;
      break;
    case "exod":
    case "exo":
    case "ex":
    case "exodus":
      Temporary5 = 2;
      break;
    case "lev":
    case "le":
    case "lv":
    case "leviticus":
      Temporary5 = 3;
      break;
    case "num":
    case "nu":
    case "nm":
    case "nb":
    case "numbers":
      Temporary5 = 4;
      break;
    case "deut":
    case "de":
    case "dt":
    case "deu":
    case "deuteronomy":
      Temporary5 = 5;
      break;
    case "josh":
    case "jos":
    case "jsh":
    case "joshua":
      Temporary5 = 9;
      break;
    case "judg":
    case "jdg":
    case "jg":
    case "jdgs":
    case "judges":
      Temporary5 = 10;
      break;
    case "rth":
    case "ru":
    case "rut":
    case "ruth":
      Temporary5 = 40;
      break;
    case "s":
    case "sa":
    case "sm":
    case "sam":
    case "stsam":
    case "stsamuel":
    case "samuel":
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([11, 12]));
      break;
    case "ikgs":
    case "iki":
      Temporary5 = 13;
      break;
    case "iikgs":
    case "iiki":
      Temporary5 = 14;
      break;
    case "kg":
    case "kgs":
    case "ki":
    case "k":
    case "kin":
    case "stkgs":
    case "stkings":
    case "kings":
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([13, 14]));
      break;
    case "ich":
    case "ichr":
    case "ichron":
      Temporary5 = 46;
      break;
    case "iich":
    case "iichr":
    case "iichron":
      Temporary5 = 47;
      break;
    case "chron":
    case "ch":
    case "chr":
    case "stchron":
    case "stchroniclesfirstchron":
    case "chronicles":
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([46, 47]));
      break;
    case "neh":
    case "ne":
    case "nehemiah":
      Temporary5 = 54;
      break;
    case "esth":
    case "est":
    case "esther":
      Temporary5 = 43;
      break;
    case "jb":
    case "job":
      Temporary5 = 36;
      break;
    case "psalm":
    case "pslm":
    case "ps":
    case "psa":
    case "psm":
    case "pss":
    case "psalms":
      Temporary5 = 34;
      break;
    case "prov":
    case "pro":
    case "pr":
    case "prv":
    case "proverbs":
      Temporary5 = 35;
      break;
    case "eccles":
    case "eccle":
    case "ecc":
    case "ec":
    case "qoh":
    case "ecclesiastes":
      Temporary5 = 42;
      break;
    case "songofsongs":
    case "song":
    case "so":
    case "sos":
    case "canticleofcanticles":
    case "canticles":
    case "cant":
    case "sg":
    case "sng":
    case "songofsolomon":
      Temporary5 = 39;
      break;
    case "is":
    case "isa":
    case "isaiah":
      Temporary5 = 15;
      break;
    case "jer":
    case "je":
    case "jr":
    case "jeremiah":
      Temporary5 = 16;
      break;
    case "epjer":
    case "epi":
    case "lje":
    case "epistleofjeremiah":
      Temporary5 = 17;
      break;
    case "lam":
    case "la":
    case "lm":
    case "lamentations":
      Temporary5 = 41;
      break;
    case "ezek":
    case "eze":
    case "ezk":
    case "ezekiel":
      Temporary5 = 18;
      break;
    case "dan":
    case "da":
    case "dn":
    case "daniel":
      Temporary5 = 49;
      break;
    case "azar":
    case "sy":
    case "prayerofazariah":
      if ((eqStrings(s_1140850714[0].Field0, [115,121]) && ((s_1140850714[0].Field1).length == 0))) {
      Temporary6 = 0;
      }
      else {
      Temporary6 = 50;
      }
      
      Temporary5 = Temporary6;
      break;
    case "hos":
    case "ho":
    case "hs":
    case "hosea":
      Temporary5 = 22;
      break;
    case "joe":
    case "jl":
    case "jol":
    case "joel":
      Temporary5 = 23;
      break;
    case "am":
    case "amo":
    case "amos":
      Temporary5 = 24;
      break;
    case "obad":
    case "ob":
    case "oba":
    case "obadiah":
      Temporary5 = 25;
      break;
    case "jnh":
    case "jon":
    case "jona":
    case "jonah":
      Temporary5 = 26;
      break;
    case "mic":
    case "mc":
    case "micah":
      Temporary5 = 27;
      break;
    case "nah":
    case "na":
    case "nam":
    case "nahum":
      Temporary5 = 28;
      break;
    case "hab":
    case "hb":
    case "habakkuk":
      Temporary5 = 29;
      break;
    case "zeph":
    case "zep":
    case "zp":
    case "zph":
    case "zephaniah":
      Temporary5 = 30;
      break;
    case "hag":
    case "hg":
    case "haggai":
      Temporary5 = 31;
      break;
    case "zech":
    case "zec":
    case "zc":
    case "zch":
    case "zechariah":
      Temporary5 = 32;
      break;
    case "mal":
    case "ml":
    case "malachi":
      Temporary5 = 33;
      break;
    case "tob":
    case "tb":
    case "tobit":
      Temporary5 = 19;
      break;
    case "jdth":
    case "jdt":
    case "jth":
    case "judith":
      Temporary5 = 45;
      break;
    case "addesth":
    case "addes":
    case "restofesther":
    case "therestofesther":
    case "aes":
    case "esthgr":
    case "gresth":
    case "esg":
    case "additionstoesther":
      Temporary5 = 44;
      break;
    case "wisdofsol":
    case "wis":
    case "ws":
    case "wisdom":
    case "wisdomofsolomon":
      Temporary5 = 37;
      break;
    case "sir":
    case "ecclesiasticus":
    case "ecclus":
    case "eccl":
    case "sirach":
      Temporary5 = 38;
      break;
    case "baruch":
    case "bar":
    case "baruk":
      if (eqStrings(s_1140850714[0].Field1, [])) {
      F.line = 155;
      s_1140850714[0].Field1 = nimCopy(null, [49], NTI33554449);
      }
      
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([20, 21]));
      break;
    case "sus":
    case "susanna":
      Temporary5 = 51;
      break;
    case "bel":
    case "belandthedragon":
      Temporary5 = 52;
      break;
    case "mac":
    case "m":
    case "ma":
    case "macc":
    case "stmaccabees":
    case "maccabees":
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([57, 58, 59, 60]));
      break;
    case "ezr":
    case "ez":
    case "esdr":
    case "esd":
    case "es":
    case "stesdras":
    case "ezra":
      if ((eqStrings(s_1140850714[0].Field0, [101,115]) && eqStrings(s_1140850714[0].Field1, []))) {
      Temporary7 = 43;
      }
      else {
        if (eqStrings(s_1140850714[0].Field1, [])) {
        F.line = 169;
        s_1140850714[0].Field1 = nimCopy(null, [49], NTI33554449);
        }
        
      Temporary7 = getCorrectByNum_1040187529(s_1140850714[0], [{Field0: 53, Field1: 1}, {Field0: 55, Field1: 3}, {Field0: 56, Field1: 4}]);
      }
      
      Temporary5 = Temporary7;
      break;
    case "profman":
    case "prman":
    case "pma":
    case "prayerofmanasses":
    case "man":
    case "prayerofmanasseh":
      Temporary5 = 48;
      break;
    case "matt":
    case "mt":
    case "mat":
    case "matthew":
      Temporary5 = 61;
      break;
    case "mrk":
    case "mar":
    case "mk":
    case "mr":
    case "mark":
      Temporary5 = 62;
      break;
    case "luk":
    case "lk":
    case "luke":
      Temporary5 = 63;
      break;
    case "act":
    case "ac":
    case "acts":
      Temporary5 = 64;
      break;
    case "rom":
    case "ro":
    case "rm":
    case "romans":
      Temporary5 = 73;
      break;
    case "cor":
    case "co":
    case "ndcorinthians":
    case "corinthians":
      if ((eqStrings(s_1140850714[0].Field0, [99,111]) && eqStrings(s_1140850714[0].Field1, []))) {
      Temporary8 = 80;
      }
      else {
      Temporary8 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([76, 77]));
      }
      
      Temporary5 = Temporary8;
      break;
    case "gal":
    case "ga":
    case "gl":
    case "galatians":
      Temporary5 = 74;
      break;
    case "ephes":
    case "eph":
    case "ephesians":
      Temporary5 = 78;
      break;
    case "phil":
    case "php":
    case "pp":
    case "philippians":
      Temporary5 = 79;
      break;
    case "col":
    case "colossians":
      Temporary5 = 80;
      break;
    case "ths":
    case "thess":
    case "th":
    case "thes":
    case "stthess":
    case "stthessalonians":
    case "thessalonians":
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([71, 72]));
      break;
    case "iti":
    case "itim":
    case "itimothy":
      Temporary5 = 69;
      break;
    case "iiti":
    case "iitim":
    case "iitimothy":
      Temporary5 = 75;
      break;
    case "tim":
    case "ti":
    case "sttim":
    case "sttimothy":
    case "tm":
    case "timothy":
      if ((eqStrings(s_1140850714[0].Field0, [116,105]) && eqStrings(s_1140850714[0].Field1, []))) {
      Temporary9 = 70;
      }
      else {
      Temporary9 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([69, 75]));
      }
      
      Temporary5 = Temporary9;
      break;
    case "tit":
    case "titus":
      Temporary5 = 70;
      break;
    case "lao":
    case "unknownbookname":
      Temporary5 = 81;
      break;
    case "philem":
    case "phm":
    case "pm":
    case "phlm":
    case "philemon":
      Temporary5 = 82;
      break;
    case "heb":
    case "hebrews":
      Temporary5 = 83;
      break;
    case "jas":
    case "jm":
    case "jms":
    case "jam":
    case "james":
      Temporary5 = 65;
      break;
    case "pet":
    case "pe":
    case "pt":
    case "p":
    case "stpeter":
    case "peter":
      Temporary5 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([66, 67]));
      break;
    case "jn":
    case "jo":
    case "joh":
    case "jhn":
    case "j":
    case "stjohn":
    case "john":
      if (eqStrings(s_1140850714[0].Field1, [])) {
      Temporary10 = 84;
      }
      else {
      Temporary10 = getCorrectByNum_1040187512(s_1140850714[0], new Uint8Array([85, 86, 87]));
      }
      
      Temporary5 = Temporary10;
      break;
    case "jud":
    case "jd":
    case "judi":
    case "jude":
      Temporary5 = 68;
      break;
    case "rev":
    case "re":
    case "therevelation":
    case "rv":
    case "revelation":
      Temporary5 = 88;
      break;
    default: 
      Temporary5 = 0;
      break;
    }
    result_1140850695 = Temporary5;
  framePtr = F.prev;

  return result_1140850695;

}

function pt_1157627906(self_1157627907) {
    var Temporary1;

  var result_1157627908 = [];

  var F = {procname: "portuguese.pt", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/portuguese.nim", line: 0};
  framePtr = F;
    F.line = 4;
    F.line = 5;
    switch (self_1157627907) {
    case 1:
      Temporary1 = [71,195,170,110,101,115,105,115];
      break;
    case 2:
      Temporary1 = [195,138,120,111,100,111];
      break;
    case 3:
      Temporary1 = [76,101,118,195,173,116,105,99,111];
      break;
    case 4:
      Temporary1 = [78,195,186,109,101,114,111,115];
      break;
    case 5:
      Temporary1 = [68,101,117,116,101,114,111,110,195,180,109,105,111];
      break;
    case 6:
      Temporary1 = [74,117,98,105,108,101,117,115];
      break;
    case 7:
      Temporary1 = [69,110,111,113,117,101];
      break;
    case 8:
      Temporary1 = [74,97,115,97,114];
      break;
    case 9:
      Temporary1 = [74,111,115,104,117,97];
      break;
    case 10:
      Temporary1 = [74,117,195,173,122,101,115];
      break;
    case 11:
      Temporary1 = [49,32,83,97,109,117,101,108];
      break;
    case 12:
      Temporary1 = [50,32,83,97,109,117,101,108];
      break;
    case 13:
      Temporary1 = [49,32,82,101,105,115];
      break;
    case 14:
      Temporary1 = [50,32,82,101,105,115];
      break;
    case 15:
      Temporary1 = [73,115,97,195,173,97,115];
      break;
    case 16:
      Temporary1 = [74,101,114,101,109,105,97,115];
      break;
    case 17:
      Temporary1 = [69,112,195,173,115,116,111,108,97,32,100,101,32,74,101,114,101,109,105,97,115];
      break;
    case 18:
      Temporary1 = [69,122,101,113,117,105,101,108];
      break;
    case 19:
      Temporary1 = [84,111,98,105,97,115];
      break;
    case 20:
      Temporary1 = [49,32,66,97,114,117,113,117,101];
      break;
    case 21:
      Temporary1 = [50,32,66,97,114,117,113,117,101];
      break;
    case 22:
      Temporary1 = [79,115,195,169,105,97,115];
      break;
    case 23:
      Temporary1 = [74,111,101,108];
      break;
    case 24:
      Temporary1 = [65,109,195,179,115];
      break;
    case 25:
      Temporary1 = [79,98,97,100,105,97,115];
      break;
    case 26:
      Temporary1 = [74,111,110,97,115];
      break;
    case 27:
      Temporary1 = [77,105,113,117,195,169,105,97,115];
      break;
    case 28:
      Temporary1 = [78,97,117,109];
      break;
    case 29:
      Temporary1 = [72,97,98,97,99,117,113,117,101];
      break;
    case 30:
      Temporary1 = [83,111,102,111,110,105,97,115];
      break;
    case 31:
      Temporary1 = [65,103,101,117];
      break;
    case 32:
      Temporary1 = [90,97,99,97,114,105,97,115];
      break;
    case 33:
      Temporary1 = [77,97,108,97,113,117,105,97,115];
      break;
    case 34:
      Temporary1 = [83,97,108,109,111,115];
      break;
    case 35:
      Temporary1 = [80,114,111,118,195,169,114,98,105,111,115];
      break;
    case 36:
      Temporary1 = [74,195,179];
      break;
    case 37:
      Temporary1 = [83,97,98,101,100,111,114,105,97,32,100,101,32,83,97,108,111,109,195,163,111];
      break;
    case 38:
      Temporary1 = [69,99,108,101,115,105,195,161,115,116,105,99,111];
      break;
    case 39:
      Temporary1 = [67,97,110,116,97,114,101,115];
      break;
    case 40:
      Temporary1 = [82,117,116,101];
      break;
    case 41:
      Temporary1 = [76,97,109,101,110,116,97,195,167,195,181,101,115];
      break;
    case 42:
      Temporary1 = [69,99,108,101,115,105,97,115,116,101,115];
      break;
    case 43:
      Temporary1 = [69,115,116,101,114];
      break;
    case 44:
      Temporary1 = [65,99,114,195,169,115,99,105,109,111,115,32,97,32,69,115,116,101,114];
      break;
    case 45:
      Temporary1 = [74,117,100,105,116,101];
      break;
    case 46:
      Temporary1 = [49,32,67,114,195,180,110,105,99,97,115];
      break;
    case 47:
      Temporary1 = [50,32,67,114,195,180,110,105,99,97,115];
      break;
    case 48:
      Temporary1 = [79,114,97,195,167,195,163,111,32,100,101,32,77,97,110,97,115,115,195,169,115];
      break;
    case 49:
      Temporary1 = [68,97,110,105,101,108];
      break;
    case 50:
      Temporary1 = [79,114,97,195,167,195,163,111,32,100,101,32,65,122,97,114,105,97,115];
      break;
    case 51:
      Temporary1 = [83,117,115,97,110,97];
      break;
    case 52:
      Temporary1 = [66,101,108,32,101,32,111,32,68,114,97,103,195,163,111];
      break;
    case 53:
      Temporary1 = [69,115,100,114,97,115];
      break;
    case 54:
      Temporary1 = [78,101,101,109,105,97,115];
      break;
    case 55:
      Temporary1 = [51,32,69,115,100,114,97,115];
      break;
    case 56:
      Temporary1 = [52,32,69,115,100,114,97,115];
      break;
    case 57:
      Temporary1 = [49,32,77,97,99,97,98,101,117,115];
      break;
    case 58:
      Temporary1 = [50,32,77,97,99,97,98,101,117,115];
      break;
    case 59:
      Temporary1 = [51,32,77,97,99,97,98,101,117,115];
      break;
    case 60:
      Temporary1 = [52,32,77,97,99,97,98,101,117,115];
      break;
    case 61:
      Temporary1 = [77,97,116,101,117,115];
      break;
    case 62:
      Temporary1 = [77,97,114,99,111,115];
      break;
    case 63:
      Temporary1 = [76,117,99,97,115];
      break;
    case 64:
      Temporary1 = [65,116,111,115,32,100,111,115,32,65,112,195,179,115,116,111,108,111,115];
      break;
    case 65:
      Temporary1 = [84,105,97,103,111];
      break;
    case 66:
      Temporary1 = [49,32,80,101,100,114,111];
      break;
    case 67:
      Temporary1 = [50,32,80,101,100,114,111];
      break;
    case 68:
      Temporary1 = [74,117,100,97,115];
      break;
    case 69:
      Temporary1 = [49,32,84,105,109,195,179,116,101,111];
      break;
    case 70:
      Temporary1 = [84,105,116,111];
      break;
    case 71:
      Temporary1 = [49,32,84,101,115,115,97,108,111,110,105,99,101,110,115,101,115];
      break;
    case 72:
      Temporary1 = [50,32,84,101,115,115,97,108,111,110,105,99,101,110,115,101,115];
      break;
    case 73:
      Temporary1 = [82,111,109,97,110,111,115];
      break;
    case 74:
      Temporary1 = [71,195,161,108,97,116,97,115];
      break;
    case 75:
      Temporary1 = [50,32,84,105,109,195,179,116,101,111];
      break;
    case 76:
      Temporary1 = [49,32,67,111,114,195,173,110,116,105,111,115];
      break;
    case 77:
      Temporary1 = [50,32,67,111,114,195,173,110,116,105,111,115];
      break;
    case 78:
      Temporary1 = [69,102,195,169,115,105,111,115];
      break;
    case 79:
      Temporary1 = [70,105,108,105,112,101,110,115,101,115];
      break;
    case 80:
      Temporary1 = [67,111,108,111,115,115,101,110,115,101,115];
      break;
    case 82:
      Temporary1 = [70,105,108,101,109,111,109];
      break;
    case 83:
      Temporary1 = [72,101,98,114,101,117,115];
      break;
    case 84:
      Temporary1 = [74,111,195,163,111];
      break;
    case 85:
      Temporary1 = [49,32,74,111,195,163,111];
      break;
    case 86:
      Temporary1 = [50,32,74,111,195,163,111];
      break;
    case 87:
      Temporary1 = [51,32,74,111,195,163,111];
      break;
    case 88:
      Temporary1 = [82,101,118,101,108,97,195,167,195,163,111];
      break;
    default: 
      Temporary1 = [78,111,109,101,32,100,101,32,108,105,118,114,111,32,100,101,115,99,111,110,104,101,99,105,100,111];
      break;
    }
    result_1157627908 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1157627908;

}

function find_922746933(a_922746936, item_922746937) {
  var result_922746938 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1614;
    result_922746938 = 0;
    Label1: {
      F.line = 1615;
      var i_922746942 = [];
      F.line = 13;
      var i_553648464 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_553648464 < (a_922746936).length)) break Label3;
            F.line = 1615;
            i_922746942 = a_922746936[chckIndx(i_553648464, 0, (a_922746936).length - 1)];
            if (eqStrings(i_922746942, item_922746937)) {
            F.line = 1616;
            break BeforeRet;
            }
            
            F.line = 1615;
            result_922746938 = addInt(result_922746938, 1);
            F.line = 16;
            i_553648464 = addInt(i_553648464, 1);
          }
      };
    };
    F.line = 1618;
    result_922746938 = -1;
  };
  framePtr = F.prev;

  return result_922746938;

}

function contains_922746928(a_922746930, item_922746931) {
  var result_922746932 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1632;
    result_922746932 = (0 <= find_922746933(a_922746930, item_922746931));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_922746932;

}

function identifyBibleBookPt_1157627909(bookName_1157627910) {
            var Temporary4;
    var Temporary5;
      var Temporary6;
        var Temporary7;
      var Temporary8;

  var result_1157627911 = 0;

  var F = {procname: "portuguese.identifyBibleBookPt", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/portuguese.nim", line: 0};
  framePtr = F;
    F.line = 102;
    var s_1157627915 = [normalize_1040187495(bookName_1157627910)];
    Label1: {
      F.line = 103;
      var t_1157627920 = [];
      F.line = 103;
      var n_1157627921 = 0;
      F.line = 38;
      var i_553648458 = 0;
      Label2: {
        F.line = 39;
          Label3: while (true) {
          if (!true) break Label3;
            F.line = 103;
            var colontmp__553648461 = nimCopy(null, (Temporary4 = [{Field0: [112,114,105,109,101,105,114,111], Field1: 1}, {Field0: [115,101,103,117,110,100,111], Field1: 2}, {Field0: [116,101,114,99,101,105,114,111], Field1: 3}, {Field0: [113,117,97,114,116,111], Field1: 4}], Temporary4)[chckIndx(i_553648458, 0, (Temporary4).length - 1)], NTI1140850703);
            F.line = 103;
            t_1157627920 = colontmp__553648461["Field0"];
            F.line = 103;
            n_1157627921 = colontmp__553648461["Field1"];
            F.line = 103;
            isANumber_1040187587(s_1157627915[0], t_1157627920, n_1157627921);
            if ((3 <= i_553648458)) {
            F.line = 41;
            break Label2;
            }
            
            F.line = 42;
            i_553648458 = addInt(i_553648458, 1);
          }
      };
    };
    F.line = 105;
    result_1157627911 = 0;
    F.line = 107;
    F.line = 107;
    switch (toJSStr(s_1157627915[0].Field0)) {
    case "gn":
    case "genesis":
      Temporary5 = 1;
      break;
    case "ex":
    case "exodo":
      Temporary5 = 2;
      break;
    case "lv":
    case "levitico":
      Temporary5 = 3;
      break;
    case "nm":
    case "numeros":
      Temporary5 = 4;
      break;
    case "dt":
    case "deuteronomio":
      Temporary5 = 5;
      break;
    case "js":
    case "joshua":
      Temporary5 = 9;
      break;
    case "jz":
    case "juizes":
      Temporary5 = 10;
      break;
    case "rt":
    case "rute":
      Temporary5 = 40;
      break;
    case "sm":
    case "sa":
    case "samuel":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([11, 12]));
      break;
    case "rs":
    case "reis":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([13, 14]));
      break;
    case "cr":
    case "cronicas":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([46, 47]));
      break;
    case "ed":
    case "esd":
    case "esdras":
      if (eqStrings(s_1157627915[0].Field1, [])) {
      F.line = 120;
      s_1157627915[0].Field1 = nimCopy(null, [49], NTI33554449);
      }
      
      Temporary5 = getCorrectByNum_1040187529(s_1157627915[0], [{Field0: 53, Field1: 1}, {Field0: 55, Field1: 3}, {Field0: 56, Field1: 4}]);
      break;
    case "ne":
    case "neemias":
      Temporary5 = 54;
      break;
    case "tb":
    case "tobias":
      Temporary5 = 19;
      break;
    case "jud":
    case "judite":
      Temporary5 = 45;
      break;
    case "et":
    case "est":
    case "ester":
      Temporary5 = 43;
      break;
    case "acrescimosaester":
      Temporary5 = 44;
      break;
    case "sl":
    case "salmos":
      Temporary5 = 34;
      break;
    case "pv":
    case "pr":
    case "proverbios":
      Temporary5 = 35;
      break;
    case "ecl":
    case "ec":
    case "eclesiastes":
      Temporary5 = 42;
      break;
    case "sb":
    case "sabedoriadesalomao":
      Temporary5 = 37;
      break;
    case "eclo":
    case "eclesiastico":
      Temporary5 = 38;
      break;
    case "ct":
    case "cantares":
      Temporary5 = 39;
      break;
    case "is":
    case "isaias":
      Temporary5 = 15;
      break;
    case "jr":
    case "jeremias":
      Temporary5 = 16;
      break;
    case "lm":
    case "lamentacoes":
      Temporary5 = 41;
      break;
    case "epistoladejeremias":
      Temporary5 = 17;
      break;
    case "br":
    case "baruque":
      if (eqStrings(s_1157627915[0].Field1, [])) {
      F.line = 138;
      s_1157627915[0].Field1 = nimCopy(null, [49], NTI33554449);
      }
      
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([20, 21]));
      break;
    case "susana":
      Temporary5 = 51;
      break;
    case "ez":
    case "ezequiel":
      Temporary5 = 18;
      break;
    case "dn":
    case "daniel":
      Temporary5 = 49;
      break;
    case "beleodragao":
      Temporary5 = 52;
      break;
    case "os":
    case "oseias":
      Temporary5 = 22;
      break;
    case "jl":
    case "joel":
      Temporary5 = 23;
      break;
    case "am":
    case "amos":
      Temporary5 = 24;
      break;
    case "ab":
    case "ob":
    case "obadias":
      Temporary5 = 25;
      break;
    case "jn":
    case "jonas":
      Temporary5 = 26;
      break;
    case "mq":
    case "miqueias":
      Temporary5 = 27;
      break;
    case "na":
    case "naum":
      Temporary5 = 28;
      break;
    case "hc":
    case "hab":
    case "habacuque":
      Temporary5 = 29;
      break;
    case "sf":
    case "sofonias":
      Temporary5 = 30;
      break;
    case "ag":
    case "ageu":
      Temporary5 = 31;
      break;
    case "zc":
    case "zacarias":
      Temporary5 = 32;
      break;
    case "ml":
    case "malaquias":
      Temporary5 = 33;
      break;
    case "mt":
    case "mateus":
      Temporary5 = 61;
      break;
    case "marcos":
      Temporary5 = 62;
      break;
    case "lc":
    case "lucas":
      Temporary5 = 63;
      break;
    case "at":
    case "atos":
    case "atosdosapostolos":
      Temporary5 = 64;
      break;
    case "rm":
    case "romanos":
      Temporary5 = 73;
      break;
    case "co":
    case "cor":
    case "corintios":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([76, 77]));
      break;
    case "gl":
    case "galatas":
      Temporary5 = 74;
      break;
    case "ef":
    case "efesios":
      Temporary5 = 78;
      break;
    case "fp":
    case "fl":
    case "filipenses":
      Temporary5 = 79;
      break;
    case "cl":
    case "colossenses":
      Temporary5 = 80;
      break;
    case "ts":
    case "tessalonicenses":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([71, 72]));
      break;
    case "tm":
    case "timoteo":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([69, 75]));
      break;
    case "tt":
    case "tito":
      Temporary5 = 70;
      break;
    case "fm":
    case "filemom":
      Temporary5 = 82;
      break;
    case "he":
    case "hb":
    case "hebreus":
      Temporary5 = 83;
      break;
    case "tg":
    case "tiago":
      Temporary5 = 65;
      break;
    case "pe":
    case "pd":
    case "pedro":
      Temporary5 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([66, 67]));
      break;
    case "joao":
    case "jo":
      if (contains_922746928(s_1157627915[0].Field2, [195,179])) {
      Temporary6 = 36;
      }
      else {
        if (((s_1157627915[0].Field1).length == 0)) {
        Temporary7 = 84;
        }
        else {
        Temporary7 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([85, 86, 87]));
        }
        
      Temporary6 = Temporary7;
      }
      
      Temporary5 = Temporary6;
      break;
    case "jd":
    case "judas":
      Temporary5 = 68;
      break;
    case "ap":
    case "revelacao":
      Temporary5 = 88;
      break;
    case "oracaodemanasses":
      Temporary5 = 48;
      break;
    case "mc":
    case "mb":
    case "macabeus":
      if (((s_1157627915[0].Field1).length == 0)) {
      Temporary8 = 62;
      }
      else {
      Temporary8 = getCorrectByNum_1040187512(s_1157627915[0], new Uint8Array([57, 58, 59, 60]));
      }
      
      Temporary5 = Temporary8;
      break;
    default: 
      Temporary5 = 0;
      break;
    }
    result_1157627911 = Temporary5;
  framePtr = F.prev;

  return result_1157627911;

}

function hebrewTransliteration_1124073477(self_1124073478) {
    var Temporary1;

  var result_1124073479 = [];

  var F = {procname: "hebrew.hebrewTransliteration", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books/hebrew.nim", line: 0};
  framePtr = F;
    F.line = 97;
    F.line = 98;
    switch (self_1124073478) {
    case 1:
      Temporary1 = [66,101,114,101,39,115,104,105,121,116,104];
      break;
    case 2:
      Temporary1 = [83,104,101,109,111,116,104];
      break;
    case 3:
      Temporary1 = [86,97,121,105,113,114,97];
      break;
    case 4:
      Temporary1 = [66,101,109,105,100,98,97,114];
      break;
    case 5:
      Temporary1 = [68,101,118,97,114,105,121,109];
      break;
    case 6:
      Temporary1 = [89,111,118,104,101,108,105,121,109];
      break;
    case 7:
      Temporary1 = [67,104,97,110,111,107];
      break;
    case 8:
      Temporary1 = [89,97,115,104,97,114];
      break;
    case 9:
      Temporary1 = [89,97,104,117,115,104,97];
      break;
    case 10:
      Temporary1 = [83,104,111,102,101,116,105,121,109];
      break;
    case 11:
      Temporary1 = [83,104,101,109,117,39,101,108,32,82,105,39,115,104,111,110];
      break;
    case 12:
      Temporary1 = [83,104,101,109,117,39,101,108,32,83,104,101,110,105,121];
      break;
    case 13:
      Temporary1 = [77,101,108,101,107,105,121,109,32,82,105,39,115,104,111,110];
      break;
    case 14:
      Temporary1 = [77,101,108,101,107,105,121,109,32,83,104,101,110,105,121];
      break;
    case 15:
      Temporary1 = [89,101,115,104,97,39,121,97,104,117];
      break;
    case 16:
      Temporary1 = [89,105,114,109,101,121,97,104,117];
      break;
    case 17:
      Temporary1 = [67,101,112,104,101,114,32,89,105,114,109,101,121,97,104,117];
      break;
    case 18:
      Temporary1 = [89,101,99,104,101,122,113,39,101,108];
      break;
    case 19:
      Temporary1 = [84,111,118,105,121,97,104,117];
      break;
    case 20:
      Temporary1 = [66,97,114,117,107,32,82,105,39,115,104,111,110];
      break;
    case 21:
      Temporary1 = [66,97,114,117,107,32,83,104,101,110,105,121];
      break;
    case 22:
      Temporary1 = [72,117,115,104,97];
      break;
    case 23:
      Temporary1 = [89,111,39,101,108];
      break;
    case 24:
      Temporary1 = [65,109,111,99];
      break;
    case 25:
      Temporary1 = [79,118,97,100,121,97,104,117];
      break;
    case 26:
      Temporary1 = [89,111,110,97,104];
      break;
    case 27:
      Temporary1 = [77,105,121,107,97,104];
      break;
    case 28:
      Temporary1 = [78,97,99,104,117,109];
      break;
    case 29:
      Temporary1 = [67,104,97,98,97,113,113,117,113];
      break;
    case 30:
      Temporary1 = [84,115,101,112,104,97,110,121,97,104,117];
      break;
    case 31:
      Temporary1 = [67,104,97,103,103,97,105];
      break;
    case 32:
      Temporary1 = [90,97,107,97,114,121,97,104,117];
      break;
    case 33:
      Temporary1 = [77,97,108,96,65,107,105,121];
      break;
    case 34:
      Temporary1 = [84,101,104,105,108,108,105,121,109];
      break;
    case 35:
      Temporary1 = [77,105,115,104,108,101,105];
      break;
    case 36:
      Temporary1 = [73,121,111,118];
      break;
    case 37:
      Temporary1 = [67,104,111,107,109,97,104,32,83,104,97,108,111,109,97,104];
      break;
    case 38:
      Temporary1 = [83,105,114,97,99,104];
      break;
    case 39:
      Temporary1 = [83,104,105,121,114,32,72,97,115,104,105,121,114,105,121,109];
      break;
    case 40:
      Temporary1 = [82,117,116,104];
      break;
    case 41:
      Temporary1 = [81,105,121,110,97,104];
      break;
    case 42:
      Temporary1 = [81,111,104,101,108,101,116,104];
      break;
    case 43:
      Temporary1 = [69,99,116,101,114];
      break;
    case 44:
      Temporary1 = [72,97,100,97,99,99,97,104];
      break;
    case 45:
      Temporary1 = [89,97,104,117,100,105,116,104];
      break;
    case 46:
      Temporary1 = [68,105,118,114,101,105,32,72,97,121,97,109,105,121,109,32,82,105,39,115,104,111,110];
      break;
    case 47:
      Temporary1 = [68,105,118,114,101,105,32,72,97,121,97,109,105,121,109,32,83,104,101,110,105,121];
      break;
    case 48:
      Temporary1 = [84,101,112,104,105,108,108,97,104,32,77,101,110,97,115,104,115,104,101,104];
      break;
    case 49:
      Temporary1 = [68,97,110,105,121,39,101,108];
      break;
    case 50:
      Temporary1 = [84,101,112,104,105,108,108,97,104,32,65,122,97,114,121,97,104,117];
      break;
    case 51:
      Temporary1 = [83,104,117,115,104,97,110,97,104];
      break;
    case 52:
      Temporary1 = [66,97,96,65,108,32,65,110,100,32,84,104,101,32,68,114,97,103,111,110];
      break;
    case 53:
      Temporary1 = [69,122,114,97,32,86,39,110,101,99,104,101,109,121,97,104,117];
      break;
    case 54:
      Temporary1 = [69,122,114,97,32,86,39,110,101,99,104,101,109,121,97,104,117];
      break;
    case 55:
      Temporary1 = [69,122,114,97,32,83,104,101,108,105,121,115,104,105,121];
      break;
    case 56:
      Temporary1 = [69,122,114,97,32,82,101,118,105,121,96,73,121];
      break;
    case 57:
      Temporary1 = [77,97,107,107,97,98,105,121,109,32,82,105,39,115,104,111,110];
      break;
    case 58:
      Temporary1 = [77,97,107,107,97,98,105,121,109,32,83,104,101,110,105,121];
      break;
    case 59:
      Temporary1 = [77,97,107,107,97,98,105,121,109,32,83,104,101,108,105,121,115,104,105,121];
      break;
    case 60:
      Temporary1 = [77,97,107,107,97,98,105,121,109,32,82,101,118,105,121,96,73,121];
      break;
    case 61:
      Temporary1 = [77,97,116,116,105,116,104,121,97,104,117];
      break;
    case 62:
      Temporary1 = [77,97,114,113,117,115];
      break;
    case 63:
      Temporary1 = [76,117,113,97,115];
      break;
    case 64:
      Temporary1 = [77,97,39,97,115,105,121,109];
      break;
    case 65:
      Temporary1 = [89,97,96,65,113,111,118];
      break;
    case 66:
      Temporary1 = [75,101,112,104,97,32,82,105,39,115,104,111,110];
      break;
    case 67:
      Temporary1 = [75,101,112,104,97,32,83,104,101,110,105,121];
      break;
    case 68:
      Temporary1 = [89,97,104,117,100,97,104];
      break;
    case 69:
      Temporary1 = [84,105,109,111,116,104,101,117,115,32,82,105,39,115,104,111,110];
      break;
    case 70:
      Temporary1 = [84,105,116,117,115];
      break;
    case 71:
      Temporary1 = [84,97,115,108,111,110,105,113,105,121,109,32,82,105,39,115,104,111,110];
      break;
    case 72:
      Temporary1 = [84,97,115,108,111,110,105,113,105,121,109,32,83,104,101,110,105,121];
      break;
    case 73:
      Temporary1 = [82,111,109,97,105,121,109];
      break;
    case 74:
      Temporary1 = [71,97,108,97,116,105,121,109];
      break;
    case 75:
      Temporary1 = [84,105,109,111,116,104,101,117,115,32,83,104,101,110,105,121];
      break;
    case 76:
      Temporary1 = [81,111,114,105,110,116,105,121,109,32,82,105,39,115,104,111,110];
      break;
    case 77:
      Temporary1 = [81,111,114,105,110,116,105,121,109,32,83,104,101,110,105,121];
      break;
    case 78:
      Temporary1 = [69,112,104,39,115,105,121,109];
      break;
    case 79:
      Temporary1 = [80,104,105,108,105,112,112,105,121,109];
      break;
    case 80:
      Temporary1 = [81,111,108,97,115,105,121,109];
      break;
    case 82:
      Temporary1 = [80,104,105,108,101,109,111,110];
      break;
    case 83:
      Temporary1 = [73,118,114,105,121,109];
      break;
    case 84:
      Temporary1 = [89,111,99,104,97,110,111,110];
      break;
    case 85:
      Temporary1 = [89,111,99,104,97,110,111,110,32,82,105,39,115,104,111,110];
      break;
    case 86:
      Temporary1 = [89,111,99,104,97,110,111,110,32,83,104,101,110,105,121];
      break;
    case 87:
      Temporary1 = [89,111,99,104,97,110,111,110,32,83,104,101,108,105,121,115,104,105,121];
      break;
    case 88:
      Temporary1 = [67,104,105,122,97,121,111,110];
      break;
    default: 
      Temporary1 = [85,110,107,110,111,119,110,32,98,111,111,107,32,110,97,109,101];
      break;
    }
    result_1124073479 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_1124073479;

}

function identifyBibleBookAllLangs_1023410268(s_1023410269) {
  var result_1023410270 = 0;

  var F = {procname: "books.identifyBibleBookAllLangs", prev: framePtr, filename: "/data/os/config/.nimble/pkgs2/bibleTools-0.8.0-9ecb51a0f83da52a5182a92f6e5d7a79fdc0a2b8/bibleTools/books.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 29;
    result_1023410270 = identifyBibleBookEn_1140850693(s_1023410269);
    if (!((result_1023410270 == 0))) {
    F.line = 30;
    break BeforeRet;
    }
    
    F.line = 31;
    result_1023410270 = identifyBibleBookPt_1157627909(s_1023410269);
  };
  framePtr = F.prev;

  return result_1023410270;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 500;
    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    F.line = 501;
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet12[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 503;
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
      F.line = 504;
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet13[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 505;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          F.line = 507;
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            F.line = 509;
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          F.line = 510;
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
            F.line = 511;
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                F.line = 511;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    F.line = 512;
    result_771752345 = i_771752346;
    }
    
  framePtr = F.prev;

  return result_771752345;

}

function parseSaturatedNatural_771752836(s_771752837, b_771752838, b_771752838_Idx, start_771752839) {
  var result_771752840 = 0;

  var F = {procname: "parseutils.parseSaturatedNatural", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/parseutils.nim", line: 0};
  framePtr = F;
    F.line = 1013;
    result_771752840 = parseSaturatedNatural_771752342((s_771752837.slice(start_771752839, (s_771752837).length - 1 + 1)), b_771752838, b_771752838_Idx);
  framePtr = F.prev;

  return result_771752840;

}

function HEX5BHEX5D_754976027(s_754976030, x_754976031) {
  var result_754976032 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 83;
    var a_754976034 = x_754976031.a;
    F.line = 84;
    var L_754976036 = addInt(subInt(subInt((s_754976030).length, x_754976031.b), a_754976034), 1);
    F.line = 85;
    result_754976032 = nimCopy(null, mnewString(chckRange(L_754976036, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 86;
      var i_754976041 = 0;
      F.line = 119;
      var i_553648469 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_553648469 < L_754976036)) break Label3;
            F.line = 86;
            i_754976041 = i_553648469;
            F.line = 86;
            result_754976032[chckIndx(i_754976041, 0, (result_754976032).length - 1)] = s_754976030[chckIndx(addInt(i_754976041, a_754976034), 0, (s_754976030).length - 1)];
            F.line = 122;
            i_553648469 = addInt(i_553648469, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754976032;

}

function HEX2EHEX2E_922746980(a_922746983, b_922746984) {
  var result_922746987 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 378;
    result_922746987 = nimCopy(result_922746987, {a: a_922746983, b: b_922746984}, NTI922746966);
  framePtr = F.prev;

  return result_922746987;

}

function parseStandardFormatSpecifier_1006633018(s_1006633019, start_1006633020, ignoreUnknownSuffix_1006633021) {
      var Temporary1;
      var Temporary2;

  var result_1006633022 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

  var F = {procname: "strformat.parseStandardFormatSpecifier", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 434;
    result_1006633022.fill = 32;
    F.line = 435;
    result_1006633022.align = 0;
    F.line = 436;
    result_1006633022.sign = 45;
    F.line = 437;
    var i_1006633024 = start_1006633020;
    if (((addInt(i_1006633024, 1) < (s_1006633019).length) && (ConstSet8[s_1006633019[chckIndx(addInt(i_1006633024, 1), 0, (s_1006633019).length - 1)]] != undefined))) {
    F.line = 439;
    result_1006633022.fill = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    F.line = 440;
    result_1006633022.align = s_1006633019[chckIndx(addInt(i_1006633024, 1), 0, (s_1006633019).length - 1)];
    F.line = 441;
    i_1006633024 = addInt(i_1006633024, 2);
    }
    else {
    if (((i_1006633024 < (s_1006633019).length) && (ConstSet9[s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)]] != undefined))) {
    F.line = 443;
    result_1006633022.align = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    F.line = 444;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    }
    if (((i_1006633024 < (s_1006633019).length) && (ConstSet10[s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)]] != undefined))) {
    F.line = 447;
    result_1006633022.sign = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    F.line = 448;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
    if (((i_1006633024 < (s_1006633019).length) && (s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)] == 35))) {
    F.line = 451;
    result_1006633022.alternateForm = true;
    F.line = 452;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
      if (!((addInt(i_1006633024, 1) < (s_1006633019).length) && (s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet11[s_1006633019[chckIndx(addInt(i_1006633024, 1), 0, (s_1006633019).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 455;
    result_1006633022.padWithZero = true;
    F.line = 456;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
    F.line = 458;
    var parsedLength_1006633066 = parseSaturatedNatural_771752836(s_1006633019, result_1006633022, "minimumWidth", i_1006633024);
    F.line = 459;
    i_1006633024 = addInt(i_1006633024, parsedLength_1006633066);
    if (((i_1006633024 < (s_1006633019).length) && (s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)] == 46))) {
    F.line = 461;
    i_1006633024 = addInt(i_1006633024, 1);
    F.line = 462;
    var parsedLengthB_1006633077 = parseSaturatedNatural_771752836(s_1006633019, result_1006633022, "precision", i_1006633024);
    F.line = 463;
    i_1006633024 = addInt(i_1006633024, parsedLengthB_1006633077);
    }
    else {
      F.line = 465;
      result_1006633022.precision = -1;
    }
    
      if (!(i_1006633024 < (s_1006633019).length)) Temporary2 = false; else {        Temporary2 = (ConstSet14[s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)]] != undefined);      }    if (Temporary2) {
    F.line = 468;
    result_1006633022.typ = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    F.line = 469;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
    F.line = 470;
    result_1006633022.endPosition = i_1006633024;
    if ((!((i_1006633024 == (s_1006633019).length)) && !(ignoreUnknownSuffix_1006633021))) {
    F.line = 472;
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_754976027(s_1006633019, HEX2EHEX2E_922746980(i_1006633024, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_1006633022;

}

function nucruneLen(s_939524124) {
  var result_939524125 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 52;
    result_939524125 = 0;
    F.line = 53;
    var i_939524126 = 0;
    Label1: {
      F.line = 54;
        Label2: while (true) {
        if (!(i_939524126 < (s_939524124).length)) break Label2;
          if ((s_939524124[chckIndx(i_939524126, 0, (s_939524124).length - 1)] <= 127)) {
          F.line = 55;
          i_939524126 = addInt(i_939524126, 1);
          }
          else {
          if (((s_939524124[chckIndx(i_939524126, 0, (s_939524124).length - 1)] >>> 5) == 6)) {
          F.line = 56;
          i_939524126 = addInt(i_939524126, 2);
          }
          else {
          if (((s_939524124[chckIndx(i_939524126, 0, (s_939524124).length - 1)] >>> 4) == 14)) {
          F.line = 57;
          i_939524126 = addInt(i_939524126, 3);
          }
          else {
          if (((s_939524124[chckIndx(i_939524126, 0, (s_939524124).length - 1)] >>> 3) == 30)) {
          F.line = 58;
          i_939524126 = addInt(i_939524126, 4);
          }
          else {
          if (((s_939524124[chckIndx(i_939524126, 0, (s_939524124).length - 1)] >>> 2) == 62)) {
          F.line = 59;
          i_939524126 = addInt(i_939524126, 5);
          }
          else {
          if (((s_939524124[chckIndx(i_939524126, 0, (s_939524124).length - 1)] >>> 1) == 126)) {
          F.line = 60;
          i_939524126 = addInt(i_939524126, 6);
          }
          else {
            F.line = 61;
          i_939524126 = addInt(i_939524126, 1);
          }
          }}}}}
          F.line = 62;
          result_939524125 = addInt(result_939524125, 1);
        }
    };
  framePtr = F.prev;

  return result_939524125;

}

function runeLen_939531211(s_939531212) {
  var result_939531213 = 0;

  var F = {procname: "unicode.runeLen", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1153;
    result_939531213 = nucruneLen((s_939531212.slice(0, (s_939531212).length - 1 + 1)));
  framePtr = F.prev;

  return result_939531213;

}

function runeLenAt_939524190(s_939524191, i_939524192) {
  var result_939524193 = 0;

  var F = {procname: "unicode.runeLenAt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    if ((s_939524191[chckIndx(i_939524192, 0, (s_939524191).length - 1)] <= 127)) {
    F.line = 74;
    result_939524193 = 1;
    }
    else {
    if (((s_939524191[chckIndx(i_939524192, 0, (s_939524191).length - 1)] >>> 5) == 6)) {
    F.line = 75;
    result_939524193 = 2;
    }
    else {
    if (((s_939524191[chckIndx(i_939524192, 0, (s_939524191).length - 1)] >>> 4) == 14)) {
    F.line = 76;
    result_939524193 = 3;
    }
    else {
    if (((s_939524191[chckIndx(i_939524192, 0, (s_939524191).length - 1)] >>> 3) == 30)) {
    F.line = 77;
    result_939524193 = 4;
    }
    else {
    if (((s_939524191[chckIndx(i_939524192, 0, (s_939524191).length - 1)] >>> 2) == 62)) {
    F.line = 78;
    result_939524193 = 5;
    }
    else {
    if (((s_939524191[chckIndx(i_939524192, 0, (s_939524191).length - 1)] >>> 1) == 126)) {
    F.line = 79;
    result_939524193 = 6;
    }
    else {
      F.line = 80;
      result_939524193 = 1;
    }
    }}}}}
  framePtr = F.prev;

  return result_939524193;

}

function runeOffset_939524802(s_939524803, pos_939524804, start_939524805) {
  var result_939524806 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 331;
    var i_939524807 = 0;
    F.line = 332;
    var o_939524808 = start_939524805;
    Label1: {
      F.line = 333;
        Label2: while (true) {
        if (!(i_939524807 < pos_939524804)) break Label2;
          F.line = 334;
          o_939524808 = addInt(o_939524808, chckRange(runeLenAt_939524190(s_939524803, o_939524808), 0, 2147483647));
          if (((s_939524803).length <= o_939524808)) {
          F.line = 336;
          result_939524806 = -1;
          break BeforeRet;
          }
          
          F.line = 337;
          i_939524807 = addInt(i_939524807, 1);
        }
    };
    F.line = 338;
    result_939524806 = o_939524808;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_939524806;

}

function runeOffset_939531386(s_939531387, pos_939531388, start_939531389) {
  var result_939531390 = 0;

  var F = {procname: "unicode.runeOffset", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1196;
    result_939531390 = runeOffset_939524802((s_939531387.slice(0, (s_939531387).length - 1 + 1)), pos_939531388, start_939531389);
  framePtr = F.prev;

  return result_939531390;

}

function validateUtf8_939524426(s_939524427) {
  var result_939524428 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 184;
    var i_939524429 = 0;
    F.line = 185;
    var L_939524433 = (s_939524427).length;
    Label1: {
      F.line = 186;
        Label2: while (true) {
        if (!(i_939524429 < L_939524433)) break Label2;
          if ((s_939524427[chckIndx(i_939524429, 0, (s_939524427).length - 1)] <= 127)) {
          F.line = 188;
          i_939524429 = addInt(i_939524429, 1);
          }
          else {
          if (((s_939524427[chckIndx(i_939524429, 0, (s_939524427).length - 1)] >>> 5) == 6)) {
          if ((s_939524427[chckIndx(i_939524429, 0, (s_939524427).length - 1)] < 194)) {
          F.line = 190;
          result_939524428 = i_939524429;
          break BeforeRet;
          }
          
          if (((addInt(i_939524429, 1) < L_939524433) && ((s_939524427[chckIndx(addInt(i_939524429, 1), 0, (s_939524427).length - 1)] >>> 6) == 2))) {
          F.line = 191;
          i_939524429 = addInt(i_939524429, 2);
          }
          else {
            F.line = 192;
            result_939524428 = i_939524429;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_939524427[chckIndx(i_939524429, 0, (s_939524427).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_939524429, 2) < L_939524433) && ((s_939524427[chckIndx(addInt(i_939524429, 1), 0, (s_939524427).length - 1)] >>> 6) == 2)) && ((s_939524427[chckIndx(addInt(i_939524429, 2), 0, (s_939524427).length - 1)] >>> 6) == 2))) {
          F.line = 195;
          i_939524429 = addInt(i_939524429, 3);
          }
          else {
            F.line = 196;
            result_939524428 = i_939524429;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_939524427[chckIndx(i_939524429, 0, (s_939524427).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_939524429, 3) < L_939524433) && ((s_939524427[chckIndx(addInt(i_939524429, 1), 0, (s_939524427).length - 1)] >>> 6) == 2)) && ((s_939524427[chckIndx(addInt(i_939524429, 2), 0, (s_939524427).length - 1)] >>> 6) == 2)) && ((s_939524427[chckIndx(addInt(i_939524429, 3), 0, (s_939524427).length - 1)] >>> 6) == 2))) {
          F.line = 201;
          i_939524429 = addInt(i_939524429, 4);
          }
          else {
            F.line = 202;
            result_939524428 = i_939524429;
            break BeforeRet;
          }
          
          }
          else {
            F.line = 204;
            result_939524428 = i_939524429;
            break BeforeRet;
          }
          }}}
        }
    };
    F.line = 205;
    result_939524428 = -1;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_939524428;

}

function validateUtf8_939531383(s_939531384) {
  var result_939531385 = 0;

  var F = {procname: "unicode.validateUtf8", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/unicode.nim", line: 0};
  framePtr = F;
    F.line = 1186;
    result_939531385 = validateUtf8_939524426((s_939531384.slice(0, (s_939531384).length - 1 + 1)));
  framePtr = F.prev;

  return result_939531385;

}

function nsuRepeatChar(c_754975841, count_754975842) {
  var result_754975843 = [];

  var F = {procname: "strutils.repeat", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1296;
    result_754975843 = nimCopy(null, mnewString(count_754975842), NTI33554449);
    Label1: {
      F.line = 1297;
      var i_754975848 = 0;
      F.line = 75;
      var colontmp__553648475 = 0;
      F.line = 1297;
      colontmp__553648475 = subInt(count_754975842, 1);
      F.line = 90;
      var res_553648476 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_553648476 <= colontmp__553648475)) break Label3;
            F.line = 1297;
            i_754975848 = res_553648476;
            F.line = 1297;
            result_754975843[chckIndx(i_754975848, 0, (result_754975843).length - 1)] = c_754975841;
            F.line = 93;
            res_553648476 = addInt(res_553648476, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754975843;

}

function alignString_1006632980(s_1006632981, minimumWidth_1006632982, align_1006632983, fill_1006632984) {
      var Temporary1;

  var result_1006632985 = [];

  var F = {procname: "strformat.alignString", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if ((minimumWidth_1006632982 == 0)) {
    F.line = 335;
    result_1006632985 = nimCopy(null, s_1006632981, NTI33554449);
    }
    else {
      F.line = 337;
      if ((validateUtf8_939531383(s_1006632981) == -1)) {
      Temporary1 = runeLen_939531211(s_1006632981);
      }
      else {
      Temporary1 = (s_1006632981).length;
      }
      
      var sRuneLen_1006632986 = Temporary1;
      F.line = 338;
      var toFill_1006632987 = subInt(minimumWidth_1006632982, sRuneLen_1006632986);
      if ((toFill_1006632987 <= 0)) {
      F.line = 340;
      result_1006632985 = nimCopy(null, s_1006632981, NTI33554449);
      }
      else {
      if (((align_1006632983 == 60) || (align_1006632983 == 0))) {
      F.line = 342;
      result_1006632985 = nimCopy(null, (s_1006632981 || []).concat(nsuRepeatChar(fill_1006632984, chckRange(toFill_1006632987, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_1006632983 == 94)) {
      F.line = 344;
      var half_1006632988 = divInt(toFill_1006632987, 2);
      F.line = 345;
      result_1006632985 = nimCopy(null, (nsuRepeatChar(fill_1006632984, chckRange(half_1006632988, 0, 2147483647)) || []).concat(s_1006632981 || [],nsuRepeatChar(fill_1006632984, chckRange(subInt(toFill_1006632987, half_1006632988), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        F.line = 347;
        result_1006632985 = nimCopy(null, (nsuRepeatChar(fill_1006632984, chckRange(toFill_1006632987, 0, 2147483647)) || []).concat(s_1006632981 || []), NTI33554449);
      }
      }}
    }
    
  framePtr = F.prev;

  return result_1006632985;

}

function formatValue_1006633131(result_1006633132, result_1006633132_Idx, value_1006633133, specifier_1006633134) {
    var Temporary1;

  var F = {procname: "strformat.formatValue", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 557;
    var spec_1006633135 = parseStandardFormatSpecifier_1006633018(specifier_1006633134, 0, false);
    F.line = 558;
    var value_1006633136 = nimCopy(null, value_1006633133, NTI33554449);
    F.line = 559;
    switch (spec_1006633135.typ) {
    case 115:
    case 0:
      break;
    default: 
      F.line = 562;
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_1006633135.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1006633135.precision == -1))) {
    if ((spec_1006633135.precision < runeLen_939531211(value_1006633136))) {
    F.line = 567;
    if (value_1006633136.length < (Temporary1 = chckRange(runeOffset_939531386(value_1006633136, chckRange(spec_1006633135.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_1006633136.length; i < Temporary1; ++i) value_1006633136.push(0); }
         else {value_1006633136.length = Temporary1; };
    }
    
    }
    
    F.line = 568;
    result_1006633132[result_1006633132_Idx].push.apply(result_1006633132[result_1006633132_Idx], alignString_1006632980(value_1006633136, spec_1006633135.minimumWidth, spec_1006633135.align, spec_1006633135.fill));;
  framePtr = F.prev;

  
}

function mkDigit_1006632965(v_1006632966, typ_1006632967) {
      var Temporary1;

  var result_1006632968 = [];

  var F = {procname: "strformat.mkDigit", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    if (!((v_1006632966 < 26))) {
    F.line = 324;
    failedAssertImpl_268435531(makeNimstrLit("/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim(324, 9) `v < 26` "));
    }
    
    if ((v_1006632966 < 10)) {
    F.line = 326;
    result_1006632968 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1006632966), 0, 255)), NTI33554449);
    }
    else {
      F.line = 328;
      if ((typ_1006632967 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1006632968 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1006632966), 10), 0, 255)), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_1006632968;

}

function formatInt_1056965061(n_1056965063, radix_1056965064, spec_1056965065) {
    var Temporary1;

  var result_1056965066 = [];

  var F = {procname: "formatInt.formatInt", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
  framePtr = F;
    F.line = 370;
    var n_1056965069 = n_1056965063;
    F.line = 371;
    var negative_1056965070 = (n_1056965069 < 0);
    F.line = 372;
    if (negative_1056965070) {
    Temporary1 = ((~(n_1056965069) + 1) );
    }
    else {
    Temporary1 = n_1056965069;
    }
    
    var v_1056965071 = Temporary1;
    F.line = 379;
    var xx_1056965072 = [];
    if (spec_1056965065.alternateForm) {
    F.line = 381;
    switch (spec_1056965065.typ) {
    case 88:
      F.line = 382;
      xx_1056965072 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      F.line = 383;
      xx_1056965072 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      F.line = 384;
      xx_1056965072 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      F.line = 385;
      xx_1056965072 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1056965071 == 0)) {
    F.line = 389;
    result_1056965066 = nimCopy(null, [48], NTI33554449);
    }
    else {
      F.line = 391;
      result_1056965066 = nimCopy(null, [], NTI33554449);
      Label2: {
        F.line = 392;
          Label3: while (true) {
          if (!(0 < v_1056965071)) break Label3;
            F.line = 393;
            var d_1056965073 = (v_1056965071 % radix_1056965064);
            F.line = 394;
            v_1056965071 = Math.trunc(((v_1056965071 / radix_1056965064) ));
            F.line = 395;
            result_1056965066.push.apply(result_1056965066, mkDigit_1006632965(chckRange(d_1056965073, -2147483648, 2147483647), spec_1056965065.typ));;
          }
      };
      Label4: {
        F.line = 396;
        var idx_1056965078 = 0;
        F.line = 117;
        var colontmp__553648480 = 0;
        F.line = 396;
        colontmp__553648480 = divInt((result_1056965066).length, 2);
        F.line = 119;
        var i_553648481 = 0;
        Label5: {
          F.line = 120;
            Label6: while (true) {
            if (!(i_553648481 < colontmp__553648480)) break Label6;
              F.line = 396;
              idx_1056965078 = i_553648481;
              F.line = 396;
              var Temporary7 = result_1056965066[chckIndx(idx_1056965078, 0, (result_1056965066).length - 1)]; result_1056965066[chckIndx(idx_1056965078, 0, (result_1056965066).length - 1)] = result_1056965066[chckIndx(subInt(subInt((result_1056965066).length, idx_1056965078), 1), 0, (result_1056965066).length - 1)]; result_1056965066[chckIndx(subInt(subInt((result_1056965066).length, idx_1056965078), 1), 0, (result_1056965066).length - 1)] = Temporary7;              F.line = 122;
              i_553648481 = addInt(i_553648481, 1);
            }
        };
      };
    }
    
    if (spec_1056965065.padWithZero) {
    F.line = 399;
    var sign_1056965083 = (negative_1056965070 || !((spec_1056965065.sign == 45)));
    F.line = 400;
    var toFill_1056965087 = subInt(subInt(subInt(spec_1056965065.minimumWidth, (result_1056965066).length), (xx_1056965072).length), (sign_1056965083 ? 1 : 0));
    if ((0 < toFill_1056965087)) {
    F.line = 402;
    result_1056965066 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1056965087, 0, 2147483647)) || []).concat(result_1056965066 || []), NTI33554449);
    }
    
    }
    
    if (negative_1056965070) {
    F.line = 405;
    result_1056965066 = nimCopy(null, ([45] || []).concat(xx_1056965072 || [],result_1056965066 || []), NTI33554449);
    }
    else {
    if (!((spec_1056965065.sign == 45))) {
    F.line = 407;
    result_1056965066 = nimCopy(null, [spec_1056965065.sign].concat(xx_1056965072 || [],result_1056965066 || []), NTI33554449);
    }
    else {
      F.line = 409;
      result_1056965066 = nimCopy(null, (xx_1056965072 || []).concat(result_1056965066 || []), NTI33554449);
    }
    }
    if ((spec_1056965065.align == 60)) {
    Label8: {
      F.line = 412;
      var i_1056965092 = 0;
      F.line = 117;
      var colontmp__553648484 = 0;
      F.line = 412;
      colontmp__553648484 = (result_1056965066).length;
      F.line = 119;
      var i_553648485 = colontmp__553648484;
      Label9: {
        F.line = 120;
          Label10: while (true) {
          if (!(i_553648485 < spec_1056965065.minimumWidth)) break Label10;
            F.line = 412;
            i_1056965092 = i_553648485;
            F.line = 412;
            addChar(result_1056965066, spec_1056965065.fill);;
            F.line = 122;
            i_553648485 = addInt(i_553648485, 1);
          }
      };
    };
    }
    else {
      F.line = 415;
      var toFill_1056965093 = subInt(spec_1056965065.minimumWidth, (result_1056965066).length);
      if ((spec_1056965065.align == 94)) {
      F.line = 417;
      var half_1056965094 = divInt(toFill_1056965093, 2);
      F.line = 418;
      result_1056965066 = nimCopy(null, (nsuRepeatChar(spec_1056965065.fill, chckRange(half_1056965094, 0, 2147483647)) || []).concat(result_1056965066 || [],nsuRepeatChar(spec_1056965065.fill, chckRange(subInt(toFill_1056965093, half_1056965094), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_1056965093)) {
        F.line = 421;
        result_1056965066 = nimCopy(null, (nsuRepeatChar(spec_1056965065.fill, chckRange(toFill_1056965093, 0, 2147483647)) || []).concat(result_1056965066 || []), NTI33554449);
        }
        
      }
      
    }
    
  framePtr = F.prev;

  return result_1056965066;

}

function formatValue_1056965053(result_1056965055, result_1056965055_Idx, value_1056965056, specifier_1056965057) {
  var F = {procname: "formatValue.formatValue", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strformat.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((specifier_1056965057).length == 0)) {
    F.line = 481;
    result_1056965055[result_1056965055_Idx].push.apply(result_1056965055[result_1056965055_Idx], HEX24_369098760(value_1056965056));;
    F.line = 482;
    break BeforeRet;
    }
    
    F.line = 483;
    var spec_1056965058 = parseStandardFormatSpecifier_1006633018(specifier_1056965057, 0, false);
    F.line = 484;
    var radix_1056965059 = 10;
    F.line = 485;
    switch (spec_1056965058.typ) {
    case 120:
    case 88:
      F.line = 486;
      radix_1056965059 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      F.line = 488;
      radix_1056965059 = 2;
      break;
    case 111:
      F.line = 489;
      radix_1056965059 = 8;
      break;
    default: 
      F.line = 491;
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1056965058.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    F.line = 494;
    result_1056965055[result_1056965055_Idx].push.apply(result_1056965055[result_1056965055_Idx], formatInt_1056965061(value_1056965056, radix_1056965059, spec_1056965058));;
  };
  framePtr = F.prev;

  
}

function HEX5BHEX5D_553648310(s_553648312, i_553648313) {
  var result_553648314 = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 23;
    result_553648314 = s_553648312[chckIndx(subInt((s_553648312).length, i_553648313), 0, (s_553648312).length - 1)];
  framePtr = F.prev;

  return result_553648314;

}

function join_553648324(a_553648326, sep_553648327) {
  var result_553648328 = [];

  var F = {procname: "join.join", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1829;
    result_553648328 = nimCopy(null, [], NTI33554449);
    Label1: {
      F.line = 1830;
      var i_553648343 = 0;
      F.line = 1830;
      var x_553648344 = 0;
      F.line = 140;
      var i_553648489 = 0;
      Label2: {
        F.line = 141;
          Label3: while (true) {
          if (!(i_553648489 < (a_553648326).length)) break Label3;
            F.line = 1830;
            i_553648343 = i_553648489;
            F.line = 1830;
            x_553648344 = a_553648326[chckIndx(i_553648489, 0, (a_553648326).length - 1)];
            if ((0 < i_553648343)) {
            F.line = 1832;
            result_553648328.push.apply(result_553648328, sep_553648327);;
            }
            
            F.line = 1830;
            result_553648328.push.apply(result_553648328, HEX24_369098760(x_553648344));;
            F.line = 143;
            i_553648489 = addInt(i_553648489, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_553648328;

}

function HEX24_553648233(v_553648234, hebrewTransliteration_553648235, addTranslation_553648236, toLang_553648237, maxVerses_553648238) {
    var Temporary1;

  var result_553648239 = [];

  var F = {procname: "verses.$", prev: framePtr, filename: "/data/os/dev/nim/bibleTools/src/bibleTools/verses.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (HEX3DHEX3D_553648240(v_553648234, initBibleVerse_553648144())) {
    F.line = 78;
    break BeforeRet;
    }
    
    F.line = 79;
    F.line = 79;
    switch (toLang_553648237) {
    case 1:
      Temporary1 = en_1140850690(identifyBibleBookEn_1140850693(v_553648234.Field0));
      break;
    case 2:
      Temporary1 = pt_1157627906(identifyBibleBookPt_1157627909(v_553648234.Field0));
      break;
    default: 
      Temporary1 = v_553648234.Field0;
      break;
    }
    var bookName_553648277 = nimCopy(null, Temporary1, NTI33554449);
    if (hebrewTransliteration_553648235) {
    F.line = 85;
    var transliterated_553648278 = hebrewTransliteration_1124073477(identifyBibleBookAllLangs_1023410268(bookName_553648277));
    if ((0 < (transliterated_553648278).length)) {
    F.line = 87;
    F.line = 87;
    var fmtRes_553648283 = [mnewString(0)];
    F.line = 87;
    formatValue_1006633131(fmtRes_553648283, 0, transliterated_553648278, []);
    F.line = 87;
    fmtRes_553648283[0].push.apply(fmtRes_553648283[0], [32,40]);;
    F.line = 87;
    formatValue_1006633131(fmtRes_553648283, 0, bookName_553648277, []);
    F.line = 87;
    fmtRes_553648283[0].push.apply(fmtRes_553648283[0], [41]);;
    bookName_553648277 = nimCopy(null, fmtRes_553648283[0], NTI33554449);
    }
    
    }
    
    F.line = 88;
    F.line = 88;
    var fmtRes_553648288 = [mnewString(0)];
    F.line = 88;
    formatValue_1006633131(fmtRes_553648288, 0, bookName_553648277, []);
    F.line = 88;
    fmtRes_553648288[0].push.apply(fmtRes_553648288[0], [32]);;
    F.line = 88;
    formatValue_1056965053(fmtRes_553648288, 0, v_553648234.Field1, []);
    result_553648239 = nimCopy(null, fmtRes_553648288[0], NTI33554449);
    if ((0 < (v_553648234.Field2).length)) {
    if ((maxVerses_553648238 < (v_553648234.Field2).length)) {
    F.line = 91;
    F.line = 91;
    var fmtRes_553648304 = [mnewString(0)];
    F.line = 91;
    fmtRes_553648304[0].push.apply(fmtRes_553648304[0], [58]);;
    F.line = 91;
    formatValue_1056965053(fmtRes_553648304, 0, v_553648234.Field2[chckIndx(0, 0, (v_553648234.Field2).length - 1)], []);
    F.line = 91;
    fmtRes_553648304[0].push.apply(fmtRes_553648304[0], [45]);;
    F.line = 91;
    formatValue_1056965053(fmtRes_553648304, 0, HEX5BHEX5D_553648310(v_553648234.Field2, 1), []);
    result_553648239.push.apply(result_553648239, fmtRes_553648304[0]);;
    }
    else {
      F.line = 93;
    result_553648239.push.apply(result_553648239, ([58] || []).concat(join_553648324(v_553648234.Field2, [44]) || []));;
    }
    
    }
    
    if ((addTranslation_553648236 && (0 < (v_553648234.Field3).length))) {
    F.line = 96;
    F.line = 96;
    var fmtRes_553648349 = [mnewString(0)];
    F.line = 96;
    fmtRes_553648349[0].push.apply(fmtRes_553648349[0], [32]);;
    F.line = 96;
    formatValue_1006633131(fmtRes_553648349, 0, v_553648234.Field3, []);
    result_553648239.push.apply(result_553648239, fmtRes_553648349[0]);;
    }
    
  };
  framePtr = F.prev;

  return result_553648239;

}

function delete_553648160(x_553648162, x_553648162_Idx, i_553648163) {
  var F = {procname: "delete.delete", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1915;
    x_553648162[x_553648162_Idx].splice(i_553648163, 1);
  framePtr = F.prev;

  
}

function nsuStrip(s_754977227, leading_754977228, trailing_754977229, chars_754977230) {
  var result_754977231 = [];

  var F = {procname: "strutils.strip", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2885;
    var first_754977232 = 0;
    F.line = 2886;
    var last_754977233 = subInt((s_754977227).length, 1);
    if (leading_754977228) {
    Label1: {
      F.line = 2888;
        Label2: while (true) {
        if (!((first_754977232 <= last_754977233) && (chars_754977230[s_754977227[chckIndx(first_754977232, 0, (s_754977227).length - 1)]] != undefined))) break Label2;
          F.line = 2888;
          first_754977232 = addInt(first_754977232, 1);
        }
    };
    }
    
    if (trailing_754977229) {
    Label3: {
      F.line = 2890;
        Label4: while (true) {
        if (!((first_754977232 <= last_754977233) && (chars_754977230[s_754977227[chckIndx(last_754977233, 0, (s_754977227).length - 1)]] != undefined))) break Label4;
          F.line = 2890;
          last_754977233 = subInt(last_754977233, 1);
        }
    };
    }
    
    F.line = 2891;
    result_754977231 = nimCopy(null, substr_33557987(s_754977227, first_754977232, last_754977233), NTI33554449);
  framePtr = F.prev;

  return result_754977231;

}

function get_553648182(self_553648183) {
    var Temporary1;

  var result_553648184 = [];

  var F = {procname: "get.get", prev: framePtr, filename: "/data/os/dev/nim/bibleTools/src/bibleTools/verses.nim", line: 0};
  framePtr = F;
    F.line = 29;
    if ((self_553648183 == null)) {
    Temporary1 = [];
    }
    else {
    Temporary1 = cstrToNimstr(self_553648183);
    }
    
    result_553648184 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_553648184;

}

function nsuToUpperAsciiChar(c_754974823) {
  var result_754974824 = 0;

  var F = {procname: "strutils.toUpperAscii", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    if ((ConstSet17[c_754974823] != undefined)) {
    F.line = 255;
    result_754974824 = (c_754974823 ^ 32);
    }
    else {
      F.line = 257;
      result_754974824 = c_754974823;
    }
    
  framePtr = F.prev;

  return result_754974824;

}

function nsuFindChar(s_754976414, sub_754976415, start_754976416, last_754976417) {
    var Temporary1;

  var result_754976418 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1913;
    result_754976418 = -1;
    F.line = 1914;
    if ((last_754976417 < 0)) {
    Temporary1 = (s_754976414).length - 1;
    }
    else {
    Temporary1 = last_754976417;
    }
    
    var last_754976419 = Temporary1;
    Label2: {
      F.line = 1917;
      var iHEX60gensym176_754976433 = 0;
      F.line = 75;
      var colontmp__553648517 = 0;
      F.line = 1917;
      colontmp__553648517 = start_754976416;
      F.line = 90;
      var res_553648518 = colontmp__553648517;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_553648518 <= last_754976419)) break Label4;
            F.line = 1931;
            iHEX60gensym176_754976433 = res_553648518;
            if ((s_754976414[chckIndx(iHEX60gensym176_754976433, 0, (s_754976414).length - 1)] == sub_754976415)) {
            F.line = 1919;
            result_754976418 = iHEX60gensym176_754976433;
            break BeforeRet;
            }
            
            F.line = 93;
            res_553648518 = addInt(res_553648518, 1);
          }
      };
    };
  };
  framePtr = F.prev;

  return result_754976418;

}

function nsuFindStrA(a_754976392, s_754976393, sub_754976394, start_754976395, last_754976396) {
    var Temporary1;

  var result_754976397 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1873;
    if ((last_754976396 < 0)) {
    Temporary1 = (s_754976393).length - 1;
    }
    else {
    Temporary1 = last_754976396;
    }
    
    var last_754976398 = Temporary1;
    F.line = 1874;
    var subLast_754976399 = subInt((sub_754976394).length, 1);
    if ((subLast_754976399 == -1)) {
    F.line = 1879;
    result_754976397 = start_754976395;
    break BeforeRet;
    }
    
    F.line = 1883;
    result_754976397 = -1;
    F.line = 1884;
    var skip_754976400 = start_754976395;
    Label2: {
      F.line = 1886;
        Label3: while (true) {
        if (!(subLast_754976399 <= subInt(last_754976398, skip_754976400))) break Label3;
          F.line = 1887;
          var i_754976401 = subLast_754976399;
          Label4: {
            F.line = 1888;
              Label5: while (true) {
              if (!(s_754976393[chckIndx(addInt(skip_754976400, i_754976401), 0, (s_754976393).length - 1)] == sub_754976394[chckIndx(i_754976401, 0, (sub_754976394).length - 1)])) break Label5;
                if ((i_754976401 == 0)) {
                F.line = 1890;
                result_754976397 = skip_754976400;
                break BeforeRet;
                }
                
                F.line = 1891;
                i_754976401 = subInt(i_754976401, 1);
              }
          };
          F.line = 1892;
          skip_754976400 = addInt(skip_754976400, a_754976392[chckIndx(s_754976393[chckIndx(addInt(skip_754976400, subLast_754976399), 0, (s_754976393).length - 1)], 0, (a_754976392).length - 1)]);
        }
    };
  };
  framePtr = F.prev;

  return result_754976397;

}

function fill_754976342(a_754976344, value_754976345) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/algorithm.nim", line: 0};
  framePtr = F;
    F.line = 72;
    var xHEX60gensym172_754976351 = 0;
    Label1: {
      F.line = 98;
        Label2: while (true) {
        if (!(xHEX60gensym172_754976351 <= (a_754976344).length - 1)) break Label2;
          F.line = 98;
          a_754976344[chckIndx(xHEX60gensym172_754976351, 0, (a_754976344).length - 1)] = value_754976345;
          F.line = 75;
          xHEX60gensym172_754976351 = addInt(xHEX60gensym172_754976351, 1);
        }
    };
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_754976339, sub_754976340) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1846;
    var m_754976341 = (sub_754976340).length;
    F.line = 1847;
    fill_754976342(a_754976339, m_754976341);
    Label1: {
      F.line = 1849;
      var i_754976361 = 0;
      F.line = 117;
      var colontmp__553648523 = 0;
      F.line = 1849;
      colontmp__553648523 = subInt(m_754976341, 1);
      F.line = 119;
      var i_553648524 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_553648524 < colontmp__553648523)) break Label3;
            F.line = 1849;
            i_754976361 = i_553648524;
            F.line = 1849;
            a_754976339[chckIndx(sub_754976340[chckIndx(i_754976361, 0, (sub_754976340).length - 1)], 0, (a_754976339).length - 1)] = subInt(subInt(m_754976341, 1), i_754976361);
            F.line = 122;
            i_553648524 = addInt(i_553648524, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function nsuInitNewSkipTable(sub_754976389) {
  var result_754976390 = [new Int32Array(256)];

  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1859;
    nsuInitSkipTable(result_754976390[0], sub_754976389);
  framePtr = F.prev;

  return result_754976390[0];

}

function nsuFindStr(s_754976451, sub_754976452, start_754976453, last_754976454) {
  var result_754976455 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((subInt((s_754976451).length, start_754976453) < (sub_754976452).length)) {
    F.line = 1971;
    result_754976455 = -1;
    break BeforeRet;
    }
    
    if (((sub_754976452).length == 1)) {
    F.line = 1972;
    result_754976455 = nsuFindChar(s_754976451, sub_754976452[chckIndx(0, 0, (sub_754976452).length - 1)], start_754976453, last_754976454);
    break BeforeRet;
    }
    
    F.line = 1975;
    result_754976455 = nsuFindStrA(nsuInitNewSkipTable(sub_754976452), s_754976451, sub_754976452, start_754976453, last_754976454);
  };
  framePtr = F.prev;

  return result_754976455;

}

function contains_754976593(s_754976594, sub_754976595) {
  var result_754976596 = false;

  var F = {procname: "strutils.contains", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 2129;
    result_754976596 = (0 <= nsuFindStr(s_754976594, sub_754976595, 0, -1));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_754976596;

}

function substr_33557999(s_33558000, first_33558001) {
  var result_33558002 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2623;
    result_33558002 = nimCopy(null, substr_33557987(s_33558000, first_33558001, (s_33558000).length - 1), NTI33554449);
  framePtr = F.prev;

  return result_33558002;

}

function nsuReplaceStr(s_754976602, sub_754976603, by_754976604) {
  var result_754976605 = [];

  var F = {procname: "strutils.replace", prev: framePtr, filename: "/data/os/config/.choosenim/toolchains/nim-#devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2148;
    result_754976605 = nimCopy(null, [], NTI33554449);
    F.line = 2149;
    var subLen_754976606 = (sub_754976603).length;
    if ((subLen_754976606 == 0)) {
    F.line = 2151;
    result_754976605 = nimCopy(null, s_754976602, NTI33554449);
    }
    else {
    if ((subLen_754976606 == 1)) {
    F.line = 2155;
    var c_754976607 = sub_754976603[chckIndx(0, 0, (sub_754976603).length - 1)];
    F.line = 2156;
    var last_754976608 = (s_754976602).length - 1;
    F.line = 2157;
    var i_754976609 = 0;
    Label1: {
      F.line = 2158;
        Label2: while (true) {
        if (!true) break Label2;
          F.line = 2159;
          var j_754976610 = nsuFindChar(s_754976602, c_754976607, chckRange(i_754976609, 0, 2147483647), last_754976608);
          if ((j_754976610 < 0)) {
          F.line = 2160;
          break Label1;
          }
          
          F.line = 2161;
          result_754976605.push.apply(result_754976605, substr_33557987(s_754976602, i_754976609, subInt(j_754976610, 1)));;
          F.line = 2162;
          result_754976605.push.apply(result_754976605, by_754976604);;
          F.line = 2163;
          i_754976609 = addInt(j_754976610, subLen_754976606);
        }
    };
    F.line = 2165;
    result_754976605.push.apply(result_754976605, substr_33557999(s_754976602, i_754976609));;
    }
    else {
      F.line = 2167;
      var a_754976611 = nsuInitNewSkipTable(sub_754976603);
      F.line = 2168;
      var last_754976612 = (s_754976602).length - 1;
      F.line = 2169;
      var i_754976613 = 0;
      Label3: {
        F.line = 2170;
          Label4: while (true) {
          if (!true) break Label4;
            F.line = 2171;
            var j_754976614 = nsuFindStrA(a_754976611, s_754976602, sub_754976603, chckRange(i_754976613, 0, 2147483647), last_754976612);
            if ((j_754976614 < 0)) {
            F.line = 2172;
            break Label3;
            }
            
            F.line = 2173;
            result_754976605.push.apply(result_754976605, substr_33557987(s_754976602, i_754976613, subInt(j_754976614, 1)));;
            F.line = 2174;
            result_754976605.push.apply(result_754976605, by_754976604);;
            F.line = 2175;
            i_754976613 = addInt(j_754976614, subLen_754976606);
          }
      };
      F.line = 2177;
      result_754976605.push.apply(result_754976605, substr_33557999(s_754976602, i_754976613));;
    }
    }
  framePtr = F.prev;

  return result_754976605;

}

function parseBibleVerse_553648152(verse_553648153) {
  var result_553648154 = {Field0: [], Field1: 0, Field2: [], Field3: []};

  var F = {procname: "verses.parseBibleVerse", prev: framePtr, filename: "/data/os/dev/nim/bibleTools/src/bibleTools/verses.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 43;
    var parts_553648155 = [(verseRegex_553648151.exec(toJSStr(verse_553648153)) || [])];
    if (((parts_553648155[0]).length < 3)) {
    F.line = 44;
    break BeforeRet;
    }
    
    F.line = 45;
    delete_553648160(parts_553648155, 0, 0);
    F.line = 48;
    result_553648154.Field0 = nimCopy(null, nsuToLowerAsciiStr(nsuStrip(get_553648182(parts_553648155[0][chckIndx(0, 0, (parts_553648155[0]).length - 1)]), true, true, ConstSet15)), NTI33554449);
    Label1: {
      F.line = 49;
      var i_553648185 = 0;
      F.line = 49;
      var ch_553648186 = 0;
      F.line = 193;
      var i_553648492 = 0;
      F.line = 194;
      var L_553648493 = (result_553648154.Field0).length;
      Label2: {
        F.line = 195;
          Label3: while (true) {
          if (!(i_553648492 < L_553648493)) break Label3;
            F.line = 49;
            i_553648185 = i_553648492;
            F.line = 49;
            ch_553648186 = result_553648154.Field0[chckIndx(i_553648492, 0, (result_553648154.Field0).length - 1)];
            if ((ConstSet16[ch_553648186] != undefined)) {
            F.line = 51;
            result_553648154.Field0[chckIndx(i_553648185, 0, (result_553648154.Field0).length - 1)] = nsuToUpperAsciiChar(result_553648154.Field0[chckIndx(i_553648185, 0, (result_553648154.Field0).length - 1)]);
            F.line = 52;
            break Label1;
            }
            
            F.line = 197;
            i_553648492 = addInt(i_553648492, 1);
            if (!(((result_553648154.Field0).length == L_553648493))) {
            F.line = 198;
            failedAssertImpl_268435531(makeNimstrLit("/data/os/config/.choosenim/toolchains/nim-#devel/lib/system/iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    F.line = 53;
    result_553648154.Field1 = nsuParseInt(nsuStrip(get_553648182(parts_553648155[0][chckIndx(1, 0, (parts_553648155[0]).length - 1)]), true, true, ConstSet18));
    F.line = 54;
    var verse_553648195 = nsuStrip(get_553648182(parts_553648155[0][chckIndx(2, 0, (parts_553648155[0]).length - 1)]), true, true, ConstSet19);
    if ((0 < (verse_553648195).length)) {
    F.line = 56;
    verse_553648195 = nimCopy(null, HEX5BHEX5D_754976027(verse_553648195, HEX2EHEX2E_922746980(1, 1)), NTI33554449);
    if (contains_754976593(verse_553648195, [45])) {
    F.line = 59;
    var verseParts_553648214 = nsuSplitString(verse_553648195, [45], -1);
    F.line = 60;
    var start_553648215 = nsuParseInt(nsuStrip(verseParts_553648214[chckIndx(0, 0, (verseParts_553648214).length - 1)], true, true, ConstSet20));
    F.line = 61;
    var to_553648216 = nsuParseInt(nsuStrip(verseParts_553648214[chckIndx(1, 0, (verseParts_553648214).length - 1)], true, true, ConstSet21));
    Label4: {
      F.line = 62;
      var i_553648221 = 0;
      F.line = 90;
      var res_553648496 = start_553648215;
      Label5: {
        F.line = 91;
          Label6: while (true) {
          if (!(res_553648496 <= to_553648216)) break Label6;
            F.line = 62;
            i_553648221 = res_553648496;
            F.line = 62;
            result_553648154.Field2.push(i_553648221);;
            F.line = 93;
            res_553648496 = addInt(res_553648496, 1);
          }
      };
    };
    }
    else {
      Label7: {
        F.line = 65;
        var verse_553648226 = [];
        F.line = 498;
        var colontmp__553648499 = [];
        F.line = 65;
        colontmp__553648499 = nsuReplaceStr(verse_553648195, [44,32], [44]);
        F.line = 386;
        var lastHEX60gensym40_553648500 = 0;
        F.line = 387;
        var splitsHEX60gensym40_553648501 = -1;
        Label8: {
          F.line = 520;
            Label9: while (true) {
            if (!(lastHEX60gensym40_553648500 <= (colontmp__553648499).length)) break Label9;
              F.line = 390;
              var firstHEX60gensym40_553648503 = lastHEX60gensym40_553648500;
              Label10: {
                F.line = 391;
                  Label11: while (true) {
                  if (!((lastHEX60gensym40_553648500 < (colontmp__553648499).length) && !(substrEq_754974974(colontmp__553648499, lastHEX60gensym40_553648500, [44])))) break Label11;
                    F.line = 392;
                    lastHEX60gensym40_553648500 = addInt(lastHEX60gensym40_553648500, 1);
                  }
              };
              if ((splitsHEX60gensym40_553648501 == 0)) {
              F.line = 393;
              lastHEX60gensym40_553648500 = (colontmp__553648499).length;
              }
              
              F.line = 65;
              verse_553648226 = substr_33557987(colontmp__553648499, firstHEX60gensym40_553648503, subInt(lastHEX60gensym40_553648500, 1));
              F.line = 65;
              result_553648154.Field2.push(nsuParseInt(nsuStrip(verse_553648226, true, true, ConstSet22)));;
              if ((splitsHEX60gensym40_553648501 == 0)) {
              F.line = 395;
              break Label8;
              }
              
              F.line = 396;
              splitsHEX60gensym40_553648501 = subInt(splitsHEX60gensym40_553648501, 1);
              F.line = 397;
              lastHEX60gensym40_553648500 = addInt(lastHEX60gensym40_553648500, 1);
            }
        };
      };
    }
    
    }
    
    F.line = 67;
    result_553648154.Field3 = nimCopy(null, nsuStrip(get_553648182(parts_553648155[0][chckIndx(3, 0, (parts_553648155[0]).length - 1)]), true, true, ConstSet23), NTI33554449);
  };
  framePtr = F.prev;

  return result_553648154;

}
var F = {procname: "module verses", prev: framePtr, filename: "/data/os/dev/nim/bibleTools/src/bibleTools/verses.nim", line: 0};
framePtr = F;
F.line = 38;
var verseRegex_553648151 = new RegExp("([^:]+) ([0-9]{1,3})(:[0-9,\\- ]+)? ?([A-z]{2}_[A-z0-9]+)?");
F.line = 107;
rawEcho(HEX24_553648233(parseBibleVerse_553648152([103,110,32,49,58,49]), false, false, 0, 5));
F.line = 108;
rawEcho(HEX24_553648233(parseBibleVerse_553648152([103,110]), false, false, 0, 5));
F.line = 109;
rawEcho(HEX24_553648233(parseBibleVerse_553648152([]), false, false, 0, 5));
framePtr = F.prev;
var F = {procname: "module verses", prev: framePtr, filename: "/data/os/dev/nim/bibleTools/src/bibleTools/verses.nim", line: 0};
framePtr = F;
framePtr = F.prev;
